{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bem vindo ao portal Telit Libs Aqui disponibilizamos as bibliotecas, c\u00f3digos fontes, exemplos de aplica\u00e7\u00f5es e toda a documenta\u00e7\u00e3o necess\u00e1ria para integra\u00e7\u00e3o dos m\u00f3dulos Telit Bluetooth BlueMod+S42 , Wi-Fi GS2101M , e GSM HE910 , com a fam\u00edlia de microcontroladores da Microchip ATSAMD21 . As bibliotecas s\u00e3o disponibilizadas para as plataformas Arduino e ASF + FreeRTOS e todas as aplica\u00e7\u00f5es de exemplos s\u00e3o compat\u00edveis com a placa Arduino M0 Pro .","title":"Inicio"},{"location":"#bem-vindo-ao-portal-telit-libs","text":"Aqui disponibilizamos as bibliotecas, c\u00f3digos fontes, exemplos de aplica\u00e7\u00f5es e toda a documenta\u00e7\u00e3o necess\u00e1ria para integra\u00e7\u00e3o dos m\u00f3dulos Telit Bluetooth BlueMod+S42 , Wi-Fi GS2101M , e GSM HE910 , com a fam\u00edlia de microcontroladores da Microchip ATSAMD21 . As bibliotecas s\u00e3o disponibilizadas para as plataformas Arduino e ASF + FreeRTOS e todas as aplica\u00e7\u00f5es de exemplos s\u00e3o compat\u00edveis com a placa Arduino M0 Pro .","title":"Bem vindo ao portal Telit Libs"},{"location":"about/","text":"Este portal disponibiliza um pacote de exemplos de uso para o sistema Arduino M0, bem como o uso direto do microcontrolador no sistema Atmel Studio (programando em C), com documenta\u00e7\u00e3o did\u00e1tica, permitindo aos clientes da Telit ter um bom ponto de partida para seus projetos envolvendo esses produtos. Este pacote de exemplos de utiliza\u00e7\u00e3o usa os m\u00f3dulos de modem 2G/3G/4G da Telit, junto a m\u00f3dulo GPS e WiFi e Bluetooth, documentados de forma did\u00e1tica, em forma de manual. Entre os exemplos constam atividades de envio de SMS, controle de chamadas, transfer\u00eancia de dados por TCP/IP atrav\u00e9s dos comandos IP Easy da Telit, opera\u00e7\u00e3o b\u00e1sica de Bluetooth e WiFi e conex\u00e3o na plataforma MQTT da Telit.","title":"Sobre"},{"location":"arduino/","text":"Para utiliza\u00e7\u00e3o da placa Arduino M0 pro, s\u00e3o disponibilizadas todas as informa\u00e7\u00f5es necess\u00e1rias para configura\u00e7\u00e3o e inclus\u00e3o das bibliotecas Telit, contendo os c\u00f3digos de exemplos, no ambiente de desenvolvimento do Arduino. Instala\u00e7\u00e3o do pacote para placa Arduino M0 Pro. Na IDE do Arduino atrav\u00e9s do Gerenciador de Placas, pode-se adicionar um pacote para utiliza\u00e7\u00e3o da placa Arduino M0 Pro. Para isso deve-se na IDE abrir o menu: Ferramenta Placa:\"Arduino\" Gerenciador de Placas... conforme a imagem abaixo. Instale o pacote Arduino SAMD Boards (32-bits ARM Cortex-M0+) conforme a imagem abaixo. Instala\u00e7\u00e3o das Bibliotecas Telit para Arduino. Dispon\u00edvel na IDE do Arduino existe um Gerenciador de Bibliotecas onde voc\u00ea pode adicionar rapidamente uma biblioteca que est\u00e1 compactada no formato .ZIP ou at\u00e9 mesmo a pasta. Para isso deve-se na IDE abrir o menu: Sketch Incluir Biblioteca (Include Library) Adicionar Biblioteca .ZIP (Add .ZIP Library...) conforme a imagem abaixo. Selecione a Biblioteca desejada, no caso a Telit_GSM. Caso tenha seguido todos os passos corretamente ver\u00e1 uma mensagem \"Biblioteca adicionada \u00e0s suas bibliotecas.\" Para abrir um exemplo da Biblioteca instalada \u00e9 s\u00f3 ir em: Arquivo Exemplos Telit_GSM Telit_GSM_UE910GL_LBS_Geofence conforme a imagem abaixo.","title":"Arduino"},{"location":"arduino/#instalacao-do-pacote-para-placa-arduino-m0-pro","text":"Na IDE do Arduino atrav\u00e9s do Gerenciador de Placas, pode-se adicionar um pacote para utiliza\u00e7\u00e3o da placa Arduino M0 Pro. Para isso deve-se na IDE abrir o menu: Ferramenta Placa:\"Arduino\" Gerenciador de Placas... conforme a imagem abaixo. Instale o pacote Arduino SAMD Boards (32-bits ARM Cortex-M0+) conforme a imagem abaixo.","title":"Instala\u00e7\u00e3o do pacote para placa Arduino M0 Pro."},{"location":"arduino/#instalacao-das-bibliotecas-telit-para-arduino","text":"Dispon\u00edvel na IDE do Arduino existe um Gerenciador de Bibliotecas onde voc\u00ea pode adicionar rapidamente uma biblioteca que est\u00e1 compactada no formato .ZIP ou at\u00e9 mesmo a pasta. Para isso deve-se na IDE abrir o menu: Sketch Incluir Biblioteca (Include Library) Adicionar Biblioteca .ZIP (Add .ZIP Library...) conforme a imagem abaixo. Selecione a Biblioteca desejada, no caso a Telit_GSM. Caso tenha seguido todos os passos corretamente ver\u00e1 uma mensagem \"Biblioteca adicionada \u00e0s suas bibliotecas.\" Para abrir um exemplo da Biblioteca instalada \u00e9 s\u00f3 ir em: Arquivo Exemplos Telit_GSM Telit_GSM_UE910GL_LBS_Geofence conforme a imagem abaixo.","title":"Instala\u00e7\u00e3o das Bibliotecas Telit para Arduino."},{"location":"arduinom0pro/","text":"Sobre o Arduino M0 Pro Refer\u00eancias Arduino M0 Pro - P\u00e1gina Oficial Arduino M0 Pro - Diagrama Esquem\u00e1tico Sobre o MCU Microchip SAMD21 Refer\u00eancias MCU SAMD21 Datasheet","title":"Placa Arduino M0 Pro"},{"location":"arduinom0pro/#sobre-o-arduino-m0-pro","text":"","title":"Sobre o Arduino M0 Pro"},{"location":"arduinom0pro/#referencias","text":"Arduino M0 Pro - P\u00e1gina Oficial Arduino M0 Pro - Diagrama Esquem\u00e1tico","title":"Refer\u00eancias"},{"location":"arduinom0pro/#sobre-o-mcu-microchip-samd21","text":"","title":"Sobre o MCU Microchip SAMD21"},{"location":"arduinom0pro/#referencias_1","text":"MCU SAMD21 Datasheet","title":"Refer\u00eancias"},{"location":"asf/","text":"ATMEL STUDIO + ASF + FreeRTOS Sobre o Atmel Studio Atmel Studio \u00e9 a IDE de desenvolvimento baseada no Visual Studio, para constru\u00e7\u00e3o de firmwares para os microcontroladores das fam\u00edlias AVR e ARM Cortex M da Microchip. Sobre o ASF - Advanced Software Framework O ASF (Advanced Software Framework) \u00e9 o framework da Microchip que integra drivers, servi\u00e7os e sistema operacional, integrando-os com o firmware em desenvolvimento de maneira simples. Sobre o FreeRTOS Sistema operacional de tempo real para microcontroladores. Documenta\u00e7\u00f5es \u00dateis Application Note - Getting Started with FreeRTOS on SAM D20/D21/R21/L21/L22 ASF - FreeRTOS ASF - FreeRTOS Workflow Criando um Projeto Atmel Studio com ASF e FreeRTOS Para criar um novo projeto utilizando o FreeRTOS \u00e9 recomendado um estudo preliminar sobre o SO e seguir o tutorial Application Note - Getting Started with FreeRTOS on SAM D20/D21/R21/L21/L22 Obs.: Para possibilitar a programa\u00e7\u00e3o do Arduino M0 Pro atrav\u00e9s do Atmel Studio, \u00e9 necess\u00e1rio efeturar pelo menos uma vez o procedimento de grava\u00e7\u00e3o do bootloader do Arduino atrav\u00e9s da IDE do Arduino, seguindo os passos: Abrir a IDE do Arduino ... Gravar o Bootloader","title":"ASF/FreeRTOS"},{"location":"asf/#atmel-studio-asf-freertos","text":"","title":"ATMEL STUDIO + ASF + FreeRTOS"},{"location":"asf/#sobre-o-atmel-studio","text":"Atmel Studio \u00e9 a IDE de desenvolvimento baseada no Visual Studio, para constru\u00e7\u00e3o de firmwares para os microcontroladores das fam\u00edlias AVR e ARM Cortex M da Microchip.","title":"Sobre o Atmel Studio"},{"location":"asf/#sobre-o-asf-advanced-software-framework","text":"O ASF (Advanced Software Framework) \u00e9 o framework da Microchip que integra drivers, servi\u00e7os e sistema operacional, integrando-os com o firmware em desenvolvimento de maneira simples.","title":"Sobre o ASF - Advanced Software Framework"},{"location":"asf/#sobre-o-freertos","text":"Sistema operacional de tempo real para microcontroladores.","title":"Sobre o FreeRTOS"},{"location":"asf/#documentacoes-uteis","text":"Application Note - Getting Started with FreeRTOS on SAM D20/D21/R21/L21/L22 ASF - FreeRTOS ASF - FreeRTOS Workflow","title":"Documenta\u00e7\u00f5es \u00dateis"},{"location":"asf/#criando-um-projeto-atmel-studio-com-asf-e-freertos","text":"Para criar um novo projeto utilizando o FreeRTOS \u00e9 recomendado um estudo preliminar sobre o SO e seguir o tutorial Application Note - Getting Started with FreeRTOS on SAM D20/D21/R21/L21/L22 Obs.: Para possibilitar a programa\u00e7\u00e3o do Arduino M0 Pro atrav\u00e9s do Atmel Studio, \u00e9 necess\u00e1rio efeturar pelo menos uma vez o procedimento de grava\u00e7\u00e3o do bootloader do Arduino atrav\u00e9s da IDE do Arduino, seguindo os passos: Abrir a IDE do Arduino ... Gravar o Bootloader","title":"Criando um Projeto Atmel Studio com ASF e FreeRTOS"},{"location":"bluemods42_doc/","text":"Aqui s\u00e3o disponibilizadas todas as informa\u00e7\u00f5es necess\u00e1rias para montagem, configura\u00e7\u00e3o, testes e utiliza\u00e7\u00e3o do m\u00f3dulo Telit BlueMod+S42. Sobre o M\u00f3dulo BlueMod+S42 M\u00f3dulo plug-and-play Bluetooth 4.2 Low Energy O BlueMod+S42 \u00e9 um m\u00f3dulo de modo \u00fanico qualificado de alta performance com Bluetooth 4.2. Ele apresenta baixo consumo de energia e flexibilidade para projetistas como o perfil I/O de terminal para casos de uso de substitui\u00e7\u00e3o de cabo serial, bem como a maioria dos perfis Bluetooth baseados em GATT por meio de uma implementa\u00e7\u00e3o gen\u00e9rica do GATT. Parte da fam\u00edlia BlueMod + Sx, o BlueMod + S42 \u00e9 intercambi\u00e1vel com as gera\u00e7\u00f5es anteriores sem precisar de novos spins de hardware ou software. Embora seja um m\u00f3dulo de baixo consumo de energia de modo \u00fanico, ele oferece uma alta taxa de transfer\u00eancia de at\u00e9 470kbit/s usando o SPP exclusivo da Telit, como o servi\u00e7o Terminal I/O. Caracter\u00edsticas Plataforma IOT aut\u00f4noma ou aplicativos hospedados por Bluetooth M\u00f3dulo qualificado Bluetooth v4.2 RED, FCC, IC, KC, MIC, RCM e Certifica\u00e7\u00e3o Anatel Poderoso Cortex M4F MCU Projetado para aplica\u00e7\u00f5es de baixa pot\u00eancia Melhor do seu desempenho de intervalo de classe Melhor desempenho de rendimento da sua classe Cliente gen\u00e9rico GATT ou implementa\u00e7\u00e3o de servidor Comunica\u00e7\u00f5es ponto a ponto ou ponto a multiponto Perfil de E/S de terminal (semelhante a SPP) para transfer\u00eancia de dados transparente r\u00e1pida e f\u00e1cil Perfil de E/S de automa\u00e7\u00e3o para transfer\u00eancia de informa\u00e7\u00f5es de status digital e anal\u00f3gico I/O de terminal e c\u00f3digo de amostra de E/S de automa\u00e7\u00e3o para iOS e Android Suporte NFC para emparelhamento simples seguro LE Secure Connection com criptografia AES de 128 bits Refer\u00eancias P\u00e1gina do M\u00f3dulo Datasheet BlueEva Hardware Guide Comandos AT Sobre o Kit de Desenvolvimento BlueEva+S Refer\u00eancias BlueEva+S/Central User Guide BlueEva Software Guide Drivers Configura\u00e7\u00e3o do Ambiente de Hardware O ambiente de hardware utilizado para os exemplos consiste na integra\u00e7\u00e3o da placa Arduino M0 Pro com o Kit de Desenvolvimento BlueEva+S. Os procedimentos de setup inicial ser\u00e3o listados a seguir: 1 - Baixar e instalar os drives USB's do link: Drivers . Devem ser instalados os drivers destacados em azul, conforme indicado na imagem abaixo. 2 - Conectar a placa BlueEva+S atrav\u00e9s de seu conector miniUSB na porta USB do computador, conectar a fonte de alimenta\u00e7\u00e3o na placa base (EVK2) e pressionar o bot\u00e3o de on por 5s, como indicado na imagem abaixo. 3 - Para testar a comunica\u00e7\u00e3o com o m\u00f3dulo atrav\u00e9s de comandos AT, deve-se instalar o software serial Telit AT Controller, dispon\u00edvel no mesmo link usado anteriormente pra baixer os drivers: Drivers . Tela inicial do Telit AT Controller: Para iniciar os testes com o m\u00f3dulo \u00e9 preciso definir as configura\u00e7\u00f5es de conex\u00e3o: Configurada a conex\u00e3o, basta clicar ent\u00e3o no bot\u00e3o de \"Connect\", que \u00e9 o bot\u00e3o da esquerda no meio da tela. Dando tudo certo e com o m\u00f3dulo conectado, s\u00e3o exibidas uma s\u00e9rie de informa\u00e7\u00f5es tais como endere\u00e7o Bluetooth, Fabricante, Modelo e vers\u00e3o de Firmware no centro da tela do programa, indicando que o mesmo est\u00e1 comunicando e recebendo dados do m\u00f3dulo. Veja o resultado a conex\u00e3o com sucesso na figura abaixo. 4 - Para atualizar o firmware acesse a Download Zone da Telit e va em Software Short Range Software Releases Short Range Bluetooh BlueMod+S42 e realize o download da vers\u00e3o mais recente do BM+S42_xxx_FWupdate.exe. Siga a instru\u00e7\u00f5es as instru\u00e7\u00f5es abaixo para a atualiza\u00e7\u00e3o do firmware: Configure o jumper J2 para a posi\u00e7\u00e3o 2-3 para ativar o bootloader ao iniciar. Conecte o modulo BlueEva+S42 atrav\u00e9s da porta USB ao PC (Tenha certeza que os driver est\u00e3o instalados). Se o modulo j\u00e1 estiver conectado reinicie o modulo pressionando o bot\u00e3o de reset da placa. Execute o BM+S42_xxx_FWupdate.exe Selecione a porta e click em update, aguarde a atualiza\u00e7\u00e3o ser concluida, e click em finish. Ap\u00f3s o termino da atualiza\u00e7\u00e3o coloque o jumper J2 novamente na posi\u00e7\u00e3o 1-2 e reinicie o modulo. Pelo o terminal do \"Telit AT Controller\" envie os comando AT F para restaurar as configura\u00e7\u00f5es de fabrica, e comece a usar. Integra\u00e7\u00e3o com Arduino M0 Pro A Conex\u00e3o do BlueEva+S com o arduino deve ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino BlueEva+S 3.3V ext. PWR GND GND 9 X322/RESET 10 X324/UART-RXD 11 X323/UART-TXD As descri\u00e7\u00f5es dos pinos utilizados na placa BlueEva+S podem ser observadas documento: BlueEva+S/Central User Guide","title":"BT BlueMod+S42"},{"location":"bluemods42_doc/#sobre-o-modulo-bluemods42","text":"M\u00f3dulo plug-and-play Bluetooth 4.2 Low Energy O BlueMod+S42 \u00e9 um m\u00f3dulo de modo \u00fanico qualificado de alta performance com Bluetooth 4.2. Ele apresenta baixo consumo de energia e flexibilidade para projetistas como o perfil I/O de terminal para casos de uso de substitui\u00e7\u00e3o de cabo serial, bem como a maioria dos perfis Bluetooth baseados em GATT por meio de uma implementa\u00e7\u00e3o gen\u00e9rica do GATT. Parte da fam\u00edlia BlueMod + Sx, o BlueMod + S42 \u00e9 intercambi\u00e1vel com as gera\u00e7\u00f5es anteriores sem precisar de novos spins de hardware ou software. Embora seja um m\u00f3dulo de baixo consumo de energia de modo \u00fanico, ele oferece uma alta taxa de transfer\u00eancia de at\u00e9 470kbit/s usando o SPP exclusivo da Telit, como o servi\u00e7o Terminal I/O.","title":"Sobre o M\u00f3dulo BlueMod+S42"},{"location":"bluemods42_doc/#caracteristicas","text":"Plataforma IOT aut\u00f4noma ou aplicativos hospedados por Bluetooth M\u00f3dulo qualificado Bluetooth v4.2 RED, FCC, IC, KC, MIC, RCM e Certifica\u00e7\u00e3o Anatel Poderoso Cortex M4F MCU Projetado para aplica\u00e7\u00f5es de baixa pot\u00eancia Melhor do seu desempenho de intervalo de classe Melhor desempenho de rendimento da sua classe Cliente gen\u00e9rico GATT ou implementa\u00e7\u00e3o de servidor Comunica\u00e7\u00f5es ponto a ponto ou ponto a multiponto Perfil de E/S de terminal (semelhante a SPP) para transfer\u00eancia de dados transparente r\u00e1pida e f\u00e1cil Perfil de E/S de automa\u00e7\u00e3o para transfer\u00eancia de informa\u00e7\u00f5es de status digital e anal\u00f3gico I/O de terminal e c\u00f3digo de amostra de E/S de automa\u00e7\u00e3o para iOS e Android Suporte NFC para emparelhamento simples seguro LE Secure Connection com criptografia AES de 128 bits","title":"Caracter\u00edsticas"},{"location":"bluemods42_doc/#referencias","text":"P\u00e1gina do M\u00f3dulo Datasheet BlueEva Hardware Guide Comandos AT","title":"Refer\u00eancias"},{"location":"bluemods42_doc/#sobre-o-kit-de-desenvolvimento-blueevas","text":"","title":"Sobre o Kit de Desenvolvimento BlueEva+S"},{"location":"bluemods42_doc/#referencias_1","text":"BlueEva+S/Central User Guide BlueEva Software Guide Drivers","title":"Refer\u00eancias"},{"location":"bluemods42_doc/#configuracao-do-ambiente-de-hardware","text":"O ambiente de hardware utilizado para os exemplos consiste na integra\u00e7\u00e3o da placa Arduino M0 Pro com o Kit de Desenvolvimento BlueEva+S. Os procedimentos de setup inicial ser\u00e3o listados a seguir: 1 - Baixar e instalar os drives USB's do link: Drivers . Devem ser instalados os drivers destacados em azul, conforme indicado na imagem abaixo. 2 - Conectar a placa BlueEva+S atrav\u00e9s de seu conector miniUSB na porta USB do computador, conectar a fonte de alimenta\u00e7\u00e3o na placa base (EVK2) e pressionar o bot\u00e3o de on por 5s, como indicado na imagem abaixo. 3 - Para testar a comunica\u00e7\u00e3o com o m\u00f3dulo atrav\u00e9s de comandos AT, deve-se instalar o software serial Telit AT Controller, dispon\u00edvel no mesmo link usado anteriormente pra baixer os drivers: Drivers . Tela inicial do Telit AT Controller: Para iniciar os testes com o m\u00f3dulo \u00e9 preciso definir as configura\u00e7\u00f5es de conex\u00e3o: Configurada a conex\u00e3o, basta clicar ent\u00e3o no bot\u00e3o de \"Connect\", que \u00e9 o bot\u00e3o da esquerda no meio da tela. Dando tudo certo e com o m\u00f3dulo conectado, s\u00e3o exibidas uma s\u00e9rie de informa\u00e7\u00f5es tais como endere\u00e7o Bluetooth, Fabricante, Modelo e vers\u00e3o de Firmware no centro da tela do programa, indicando que o mesmo est\u00e1 comunicando e recebendo dados do m\u00f3dulo. Veja o resultado a conex\u00e3o com sucesso na figura abaixo. 4 - Para atualizar o firmware acesse a Download Zone da Telit e va em Software Short Range Software Releases Short Range Bluetooh BlueMod+S42 e realize o download da vers\u00e3o mais recente do BM+S42_xxx_FWupdate.exe. Siga a instru\u00e7\u00f5es as instru\u00e7\u00f5es abaixo para a atualiza\u00e7\u00e3o do firmware: Configure o jumper J2 para a posi\u00e7\u00e3o 2-3 para ativar o bootloader ao iniciar. Conecte o modulo BlueEva+S42 atrav\u00e9s da porta USB ao PC (Tenha certeza que os driver est\u00e3o instalados). Se o modulo j\u00e1 estiver conectado reinicie o modulo pressionando o bot\u00e3o de reset da placa. Execute o BM+S42_xxx_FWupdate.exe Selecione a porta e click em update, aguarde a atualiza\u00e7\u00e3o ser concluida, e click em finish. Ap\u00f3s o termino da atualiza\u00e7\u00e3o coloque o jumper J2 novamente na posi\u00e7\u00e3o 1-2 e reinicie o modulo. Pelo o terminal do \"Telit AT Controller\" envie os comando AT F para restaurar as configura\u00e7\u00f5es de fabrica, e comece a usar.","title":"Configura\u00e7\u00e3o do Ambiente de Hardware"},{"location":"bluemods42_doc/#integracao-com-arduino-m0-pro","text":"A Conex\u00e3o do BlueEva+S com o arduino deve ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino BlueEva+S 3.3V ext. PWR GND GND 9 X322/RESET 10 X324/UART-RXD 11 X323/UART-TXD As descri\u00e7\u00f5es dos pinos utilizados na placa BlueEva+S podem ser observadas documento: BlueEva+S/Central User Guide","title":"Integra\u00e7\u00e3o com Arduino M0 Pro"},{"location":"bluemods42_examples/","text":"Exemplos BlueMod+S42 Logger Bluetooth Sistema de logger baseado em bluetooth: Tasks cont\u00ednuas (ASF/FreeRTOS) ou Loop infinito (Arduino) que repassa o tr\u00e1fego de uma das portas seriais atrav\u00e9s de uma conex\u00e3o bluetooth I/O, atrav\u00e9s dos comandos AT para terminal I/O do modulo. Permite tamb\u00e9m o fluxo de dados entre os dispositivo. Um tunel de porta serial por bluetooth. Logger Bluetooth Wifi Sistema logger de Bluetooth, baseado em Wifi. Logger Bluetooth atrav\u00e9s de modem Sistema logger de Bluetooth atrav\u00e9s de modem, o qual coloca o m\u00f3dulo Bluetooth para ouvir beacons e broadcasts / advertisement pr\u00f3ximos e os repassa diretamente para um socket aberto no modem. Telit \"Terminal IO Utility\" App A telit disponibiliza o aplicativo \"Terminal IO Utility\" para android e iOS o qual pode ser utilizado para estabelecer conex\u00f5es bluetooth de baixa energia entre um smartphone e o BlueEva+S Os seguintes QR-Codes proveem o link para download do \"Terminal IO Utility\".* O \u201cTerminal IO Utility\u201d App permite o usuario se conectar ao terminal I/O dos dispositivos perifericos e trocar dados provendo uma simples emula\u00e7\u00e3o do terminal. Todos os exemplos disponiveis aki para BlueMod+S42 fazem uso deste app. Mais informa\u00e7\u00f5es sobre o mesmo podem ser encontrados no BlueEva+S/Central User Guide","title":"Exemplos BlueMod+S42"},{"location":"bluemods42_examples/#exemplos-bluemods42","text":"","title":"Exemplos BlueMod+S42"},{"location":"bluemods42_examples/#logger-bluetooth","text":"Sistema de logger baseado em bluetooth: Tasks cont\u00ednuas (ASF/FreeRTOS) ou Loop infinito (Arduino) que repassa o tr\u00e1fego de uma das portas seriais atrav\u00e9s de uma conex\u00e3o bluetooth I/O, atrav\u00e9s dos comandos AT para terminal I/O do modulo. Permite tamb\u00e9m o fluxo de dados entre os dispositivo. Um tunel de porta serial por bluetooth.","title":"Logger Bluetooth"},{"location":"bluemods42_examples/#logger-bluetooth-wifi","text":"Sistema logger de Bluetooth, baseado em Wifi.","title":"Logger Bluetooth Wifi"},{"location":"bluemods42_examples/#logger-bluetooth-atraves-de-modem","text":"Sistema logger de Bluetooth atrav\u00e9s de modem, o qual coloca o m\u00f3dulo Bluetooth para ouvir beacons e broadcasts / advertisement pr\u00f3ximos e os repassa diretamente para um socket aberto no modem.","title":"Logger Bluetooth atrav\u00e9s de modem"},{"location":"bluemods42_examples/#telit-terminal-io-utility-app","text":"A telit disponibiliza o aplicativo \"Terminal IO Utility\" para android e iOS o qual pode ser utilizado para estabelecer conex\u00f5es bluetooth de baixa energia entre um smartphone e o BlueEva+S Os seguintes QR-Codes proveem o link para download do \"Terminal IO Utility\".* O \u201cTerminal IO Utility\u201d App permite o usuario se conectar ao terminal I/O dos dispositivos perifericos e trocar dados provendo uma simples emula\u00e7\u00e3o do terminal. Todos os exemplos disponiveis aki para BlueMod+S42 fazem uso deste app. Mais informa\u00e7\u00f5es sobre o mesmo podem ser encontrados no BlueEva+S/Central User Guide","title":"Telit \"Terminal IO Utility\" App"},{"location":"bluemods42_lib/","text":"","title":"Bluemods42 lib"},{"location":"downloads/","text":"Bibliotecas SAMD21 / Arduino M0 Pro Arduino Telit Libs Arduino + examples ASF Telit Libs ASF Exemplos Telit Libs ASF Frameworks Atmel Studio ASF Arduino Ferramentas Telit_AT_Controller_r3.4.11_XFP_4.0.5 PacketSender (TCP Server) Telit I/O Updater - BMS42_Central_V3_11_0004_FWupdate Drivers Telit Drivers","title":"Downloads"},{"location":"downloads/#bibliotecas","text":"","title":"Bibliotecas"},{"location":"downloads/#samd21-arduino-m0-pro","text":"","title":"SAMD21 / Arduino M0 Pro"},{"location":"downloads/#arduino","text":"Telit Libs Arduino + examples","title":"Arduino"},{"location":"downloads/#asf","text":"Telit Libs ASF Exemplos Telit Libs ASF","title":"ASF"},{"location":"downloads/#frameworks","text":"Atmel Studio ASF Arduino","title":"Frameworks"},{"location":"downloads/#ferramentas","text":"Telit_AT_Controller_r3.4.11_XFP_4.0.5 PacketSender (TCP Server) Telit I/O Updater - BMS42_Central_V3_11_0004_FWupdate","title":"Ferramentas"},{"location":"downloads/#drivers","text":"Telit Drivers","title":"Drivers"},{"location":"gs2101m_doc/","text":"Aqui s\u00e3o disponibilizadas todas as informa\u00e7\u00f5es necess\u00e1rias para montagem, configura\u00e7\u00e3o, testes e utiliza\u00e7\u00e3o do m\u00f3dulo Telit GS2101M. Sobre o M\u00f3dulo GS2101M A s\u00e9rie GS2101M \u00e9 um m\u00f3dulo Wi-Fi (IEEE 802.11 b / g / n) totalmente certificado e seguro que oferece integra\u00e7\u00e3o r\u00e1pida e econ\u00f4mica da conectividade Wi-Fi aos projetos de produtos. A s\u00e9rie est\u00e1 dispon\u00edvel com uma antena de rastreio PCB opcional ou conector U.FL. Caracter\u00edsticas 3 ADCs sigma-delta de 16 bits, ideais para dispositivos inteligentes de medi\u00e7\u00e3o e energia 18 x 25 x 2,7 mm 40 pinos Medi\u00e7\u00e3o de alta resolu\u00e7\u00e3o e medi\u00e7\u00e3o de energia Modo sem host (sem MCU externo), executando Wi-Fi completo e pilha de rede TCP/IP Modo host, a biblioteca de comandos AT mais abrangente conectando-se a qualquer microcontrolador host de 8/16/32 bits usando interfaces UART, SPI ou SDIO F\u00e1cil provisionamento de smartphones com AP limitado ou Wi-Fi Protected Set-up (WPS) Baixo consumo com recursos de gerenciamento de energia: 2,7V - 3,6V, 3,3V nominal Refer\u00eancias P\u00e1gina do M\u00f3dulo Telit GS2101M Datasheet Telit GS2101M AT Commands Serial to Wifi User Guide IP to Wifi User Guide Sobre o Kit de Desenvolvimento GainSpan GS2100M EVB3 Kit de Desenvolvimento oficial do m\u00f3dulo GS2101M. Refer\u00eancias GS2K Module Evaluation Board Hardware User Guide GS2K Module Programing User Guide GS2K S2W User Case Reference Guide Configura\u00e7\u00e3o do Ambiente de Hardware Os procedimentos de setup inicial contidos no documento: GS2K Module Evaluation Board Hardware User Guide ser\u00e3o listados a seguir: 1 - Conectar a placa EVB3 atrav\u00e9s de seu conector microUSB (USB0) na porta USB do computador (a alimenta\u00e7\u00e3o da placa ocorre pela USB do computador). 2 - Instalar o drive FTDI. 3 - Instalar o software serial TeraTerm VT termial. 4 - Executar o TeraTerm e configurar a porta serial como nas imagens abaixo: Obs. 1: Os primeiros testes realizados com o kit EVB3 s\u00f3 funcionaram com o baudrate 460800 para a vers\u00e3o 3.5.0 do firmware de avalia\u00e7\u00e3o (AT+VER=?? - comando que retorna a vers\u00e3o de firmware instalado na placa). Obs. 2: O envio de comandos AT tamb\u00e9m podem ser realizados atrav\u00e9s do software AT Controller dispon\u00edvel na \u00e1rea de downloads no site da Telit. Atualiza\u00e7\u00e3o de Firmware O procedimento de atualiza\u00e7\u00e3o de firmware foi realizado seguindo a documenta\u00e7\u00e3o t\u00e9cnica: GS2K Module Programming User Guide . 1 - Acessar o site http://www.gainspan.com.br e realizar o cadastro para ter acesso a portal de suporte. 2 - Clique em SDK Buikder e selecione o m\u00f3dulo GS2000 como indicado na figura abaixo. Obs. 1: Clique em next na pr\u00f3xima tela. 3 - Na tela apresentada abaixo, foi selecionada op\u00e7\u00e3o para cria\u00e7\u00e3o do firmware de avalia\u00e7\u00e3o da EVB3. Obs: 1: Ap\u00f3s clicar em next nesta tela, uma vers\u00e3o do firmware, com as configura\u00e7\u00f5es selecionadas, ser\u00e1 criada. Em seguida ao clicar na aba Build History, o projeto do firmware, com a ferramenta de atualiza\u00e7\u00e3o e documenta\u00e7\u00f5es, estar\u00e1 dispon\u00edvel para download em alguns minutos. 4 - Configure a placa para o modo de program na chave (vermelha), conecte a placa pela usb0 no computador e ligue a chave de alimenta\u00e7\u00e3o da placa como indicado na imagem abaixo. 5 - Na pasta Tools est\u00e1 dispon\u00edvel a ferramenta de atualiza\u00e7\u00e3o de firmware GS_programming_tool. Obs. 1: Selecione os par\u00e2metros de conex\u00e3o e clique em check connection para verificar se existe comunica\u00e7\u00e3o com a placa. Caso o software n\u00e3o consiga se comunicar com a placa basta selecionar o baudrate adequado, com o jumper J13 presente o baudrate \u00e9 igua a 921600 e sem o jumper o baudrate \u00e9 115200. Obs. 2: Em seguida, nas op\u00e7\u00f5es Super Block e Current FW Version, selecione os dois arquivos bin\u00e1rios de atualiza\u00e7\u00e3o dentro da pasta Embedded\\s2w e clique em Erase and Program. Integra\u00e7\u00e3o com Arduino M0 Pro A Conex\u00e3o da EVB3 com o arduino deve ser de acordo com a seguinte imagem: Pino Arduino M0 Pro Pino EVB3 GND GND 3.3V VIN_3V3 10 GPIO0/UART0_RX_M 11 GPIO1/UART0_TX_M 09 EXT_RTC_RESET_N","title":"Wifi GS2101M"},{"location":"gs2101m_doc/#sobre-o-modulo-gs2101m","text":"A s\u00e9rie GS2101M \u00e9 um m\u00f3dulo Wi-Fi (IEEE 802.11 b / g / n) totalmente certificado e seguro que oferece integra\u00e7\u00e3o r\u00e1pida e econ\u00f4mica da conectividade Wi-Fi aos projetos de produtos. A s\u00e9rie est\u00e1 dispon\u00edvel com uma antena de rastreio PCB opcional ou conector U.FL.","title":"Sobre o M\u00f3dulo GS2101M"},{"location":"gs2101m_doc/#caracteristicas","text":"3 ADCs sigma-delta de 16 bits, ideais para dispositivos inteligentes de medi\u00e7\u00e3o e energia 18 x 25 x 2,7 mm 40 pinos Medi\u00e7\u00e3o de alta resolu\u00e7\u00e3o e medi\u00e7\u00e3o de energia Modo sem host (sem MCU externo), executando Wi-Fi completo e pilha de rede TCP/IP Modo host, a biblioteca de comandos AT mais abrangente conectando-se a qualquer microcontrolador host de 8/16/32 bits usando interfaces UART, SPI ou SDIO F\u00e1cil provisionamento de smartphones com AP limitado ou Wi-Fi Protected Set-up (WPS) Baixo consumo com recursos de gerenciamento de energia: 2,7V - 3,6V, 3,3V nominal","title":"Caracter\u00edsticas"},{"location":"gs2101m_doc/#referencias","text":"P\u00e1gina do M\u00f3dulo Telit GS2101M Datasheet Telit GS2101M AT Commands Serial to Wifi User Guide IP to Wifi User Guide","title":"Refer\u00eancias"},{"location":"gs2101m_doc/#sobre-o-kit-de-desenvolvimento-gainspan-gs2100m-evb3","text":"Kit de Desenvolvimento oficial do m\u00f3dulo GS2101M.","title":"Sobre o Kit de Desenvolvimento GainSpan GS2100M EVB3"},{"location":"gs2101m_doc/#referencias_1","text":"GS2K Module Evaluation Board Hardware User Guide GS2K Module Programing User Guide GS2K S2W User Case Reference Guide","title":"Refer\u00eancias"},{"location":"gs2101m_doc/#configuracao-do-ambiente-de-hardware","text":"Os procedimentos de setup inicial contidos no documento: GS2K Module Evaluation Board Hardware User Guide ser\u00e3o listados a seguir: 1 - Conectar a placa EVB3 atrav\u00e9s de seu conector microUSB (USB0) na porta USB do computador (a alimenta\u00e7\u00e3o da placa ocorre pela USB do computador). 2 - Instalar o drive FTDI. 3 - Instalar o software serial TeraTerm VT termial. 4 - Executar o TeraTerm e configurar a porta serial como nas imagens abaixo: Obs. 1: Os primeiros testes realizados com o kit EVB3 s\u00f3 funcionaram com o baudrate 460800 para a vers\u00e3o 3.5.0 do firmware de avalia\u00e7\u00e3o (AT+VER=?? - comando que retorna a vers\u00e3o de firmware instalado na placa). Obs. 2: O envio de comandos AT tamb\u00e9m podem ser realizados atrav\u00e9s do software AT Controller dispon\u00edvel na \u00e1rea de downloads no site da Telit.","title":"Configura\u00e7\u00e3o do Ambiente de Hardware"},{"location":"gs2101m_doc/#atualizacao-de-firmware","text":"O procedimento de atualiza\u00e7\u00e3o de firmware foi realizado seguindo a documenta\u00e7\u00e3o t\u00e9cnica: GS2K Module Programming User Guide . 1 - Acessar o site http://www.gainspan.com.br e realizar o cadastro para ter acesso a portal de suporte. 2 - Clique em SDK Buikder e selecione o m\u00f3dulo GS2000 como indicado na figura abaixo. Obs. 1: Clique em next na pr\u00f3xima tela. 3 - Na tela apresentada abaixo, foi selecionada op\u00e7\u00e3o para cria\u00e7\u00e3o do firmware de avalia\u00e7\u00e3o da EVB3. Obs: 1: Ap\u00f3s clicar em next nesta tela, uma vers\u00e3o do firmware, com as configura\u00e7\u00f5es selecionadas, ser\u00e1 criada. Em seguida ao clicar na aba Build History, o projeto do firmware, com a ferramenta de atualiza\u00e7\u00e3o e documenta\u00e7\u00f5es, estar\u00e1 dispon\u00edvel para download em alguns minutos. 4 - Configure a placa para o modo de program na chave (vermelha), conecte a placa pela usb0 no computador e ligue a chave de alimenta\u00e7\u00e3o da placa como indicado na imagem abaixo. 5 - Na pasta Tools est\u00e1 dispon\u00edvel a ferramenta de atualiza\u00e7\u00e3o de firmware GS_programming_tool. Obs. 1: Selecione os par\u00e2metros de conex\u00e3o e clique em check connection para verificar se existe comunica\u00e7\u00e3o com a placa. Caso o software n\u00e3o consiga se comunicar com a placa basta selecionar o baudrate adequado, com o jumper J13 presente o baudrate \u00e9 igua a 921600 e sem o jumper o baudrate \u00e9 115200. Obs. 2: Em seguida, nas op\u00e7\u00f5es Super Block e Current FW Version, selecione os dois arquivos bin\u00e1rios de atualiza\u00e7\u00e3o dentro da pasta Embedded\\s2w e clique em Erase and Program.","title":"Atualiza\u00e7\u00e3o de Firmware"},{"location":"gs2101m_doc/#integracao-com-arduino-m0-pro","text":"A Conex\u00e3o da EVB3 com o arduino deve ser de acordo com a seguinte imagem: Pino Arduino M0 Pro Pino EVB3 GND GND 3.3V VIN_3V3 10 GPIO0/UART0_RX_M 11 GPIO1/UART0_TX_M 09 EXT_RTC_RESET_N","title":"Integra\u00e7\u00e3o com Arduino M0 Pro"},{"location":"gs2101m_examples/","text":"Exemplos Wifi GS2101M T\u00fanel TCP Sistema de logger baseado em modem: Tasks cont\u00ednuas (ASF/FreeRTOS) ou Loop infinito (Arduino) que repassa o tr\u00e1fego de uma das portas seriais para um socket aberto com um servidor remoto, atrav\u00e9s dos comandos AT para sockets. Bufferiza os bytes que s\u00e3o recebidos enquanto a conex\u00e3o n\u00e3o estava ativa. As configura\u00e7\u00f5es de servidor, baudrate e afins s\u00e3o manuais, atrav\u00e9s de constantes no c\u00f3digo. O sistema verifica que a conex\u00e3o caiu (contexto com a APN ou o socket) e tenta continuamente uma reconex\u00e3o. Permite tamb\u00e9m o fluxo de dados servidor- dispositivo, refletido na porta serial. Um tunel de porta serial por TCP. Arduino - GS2101M - T\u00fanel TCP ASF/FreeRTOS - GS2101M - T\u00fanel TCP MQTT Nativo Publica vari\u00e1veis em sistema MQTT, comandos AT de MQTT (m\u00e9todo nativo) para modem: Cria task (FreeRTOS) ou rotina (Arduino) que l\u00ea uma fila de dados a serem enviados para o portal MQTT da Telit, em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item executa os comandos AT de post de vari\u00e1veis por MQTT embutido nos m\u00f3dulos. Arduino - GS2101M - MQTT Nativo ASF/FreeRTOS - GS2101M - MQTT Nativo MQTT Software Publica vari\u00e1vel em sistema MQTT, comandos AT de Socket (m\u00e9todo por software) para modem: Criar task (FreeRTOS) ou rotina (Arduino) que l\u00ea uma fila de dados a serem enviados para o portal MQTT da Telit, em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item efetua chamadas a uma biblioteca para o protocolo MQTT, se conectando ao servidor atrav\u00e9s dos comandos AT de socket do m\u00f3dulo. Esta implementa\u00e7\u00e3o utiliza a biblioteca Paho - Embedded MQTT C/C++ Client Libraries . Arduino - GS2101M - MQTT Software ASF/FreeRTOS - GS2101M - MQTT Software","title":"Exemplos Wifi GS2101M"},{"location":"gs2101m_examples/#exemplos-wifi-gs2101m","text":"","title":"Exemplos Wifi GS2101M"},{"location":"gs2101m_examples/#tunel-tcp","text":"Sistema de logger baseado em modem: Tasks cont\u00ednuas (ASF/FreeRTOS) ou Loop infinito (Arduino) que repassa o tr\u00e1fego de uma das portas seriais para um socket aberto com um servidor remoto, atrav\u00e9s dos comandos AT para sockets. Bufferiza os bytes que s\u00e3o recebidos enquanto a conex\u00e3o n\u00e3o estava ativa. As configura\u00e7\u00f5es de servidor, baudrate e afins s\u00e3o manuais, atrav\u00e9s de constantes no c\u00f3digo. O sistema verifica que a conex\u00e3o caiu (contexto com a APN ou o socket) e tenta continuamente uma reconex\u00e3o. Permite tamb\u00e9m o fluxo de dados servidor- dispositivo, refletido na porta serial. Um tunel de porta serial por TCP. Arduino - GS2101M - T\u00fanel TCP ASF/FreeRTOS - GS2101M - T\u00fanel TCP","title":"T\u00fanel TCP"},{"location":"gs2101m_examples/#mqtt-nativo","text":"Publica vari\u00e1veis em sistema MQTT, comandos AT de MQTT (m\u00e9todo nativo) para modem: Cria task (FreeRTOS) ou rotina (Arduino) que l\u00ea uma fila de dados a serem enviados para o portal MQTT da Telit, em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item executa os comandos AT de post de vari\u00e1veis por MQTT embutido nos m\u00f3dulos. Arduino - GS2101M - MQTT Nativo ASF/FreeRTOS - GS2101M - MQTT Nativo","title":"MQTT Nativo"},{"location":"gs2101m_examples/#mqtt-software","text":"Publica vari\u00e1vel em sistema MQTT, comandos AT de Socket (m\u00e9todo por software) para modem: Criar task (FreeRTOS) ou rotina (Arduino) que l\u00ea uma fila de dados a serem enviados para o portal MQTT da Telit, em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item efetua chamadas a uma biblioteca para o protocolo MQTT, se conectando ao servidor atrav\u00e9s dos comandos AT de socket do m\u00f3dulo. Esta implementa\u00e7\u00e3o utiliza a biblioteca Paho - Embedded MQTT C/C++ Client Libraries . Arduino - GS2101M - MQTT Software ASF/FreeRTOS - GS2101M - MQTT Software","title":"MQTT Software"},{"location":"gs2101m_lib/","text":"","title":"Gs2101m lib"},{"location":"libs/","text":"Bibliotecas Arduino - Telit Libs ASF/FreeRTOS - Telit Libs","title":"Bibliotecas"},{"location":"libs/#bibliotecas","text":"Arduino - Telit Libs ASF/FreeRTOS - Telit Libs","title":"Bibliotecas"},{"location":"logger_bms42/","text":"Exemplo Logger Bluetooth BlueMode+S42 Arduino M0 Pro- BlueMode+S42 - Logger ASF/FreeRTOS - BlueMode+S42 - Logger Descri\u00e7\u00e3o Este \u00e9 um exemplo de um sistema de logger baseado em bluetooth de Tasks cont\u00ednuas (ASF/FreeRTOS) ou Loop infinito (Arduino) que repassa o tr\u00e1fego de uma das portas seriais atrav\u00e9s de uma conex\u00e3o bluetooth I/O, atrav\u00e9s dos comandos AT para terminal I/O do modulo. Permite tamb\u00e9m o fluxo de dados entre os dispositivo. Um tunel de porta serial por bluetooth. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o da placa BlueEva+S integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino BlueEva+S 3.3V ext. PWR GND GND 9 X322/RESET 10 X324/UART-RXD 11 X323/UART-TXD As descri\u00e7\u00f5es dos pinos utilizados na placa BlueEva+S podem ser observadas documento: BlueEva+S/Central User Guide Configura\u00e7\u00e3o de Software Para a comunica\u00e7\u00e3o bluetooth neste exemplo \u00e9 necess\u00e1rio a utiliza\u00e7\u00e3o de um aplicativo de interface para comunica\u00e7\u00e3o e transmiss\u00e3o de dados com o BlueMod+S42. Telit \"Terminal IO Utility\" App A telit disponibiliza o aplicativo \"Terminal IO Utility\" para android e iOS o qual pode ser utilizado para estabelecer conex\u00f5es bluetooth de baixa energia entre um smartphone e o BlueEva+S Os seguintes QR-Codes proveem o link para download do \"Terminal IO Utility\". O \u201cTerminal IO Utility\u201d App permite o usuario se conectar ao terminal I/O dos dispositivos perifericos e trocar dados provendo uma simples emula\u00e7\u00e3o do terminal.","title":"Logger BlueMod+S42"},{"location":"logger_bms42/#exemplo-logger-bluetooth-bluemodes42","text":"Arduino M0 Pro- BlueMode+S42 - Logger ASF/FreeRTOS - BlueMode+S42 - Logger","title":"Exemplo Logger Bluetooth BlueMode+S42"},{"location":"logger_bms42/#descricao","text":"Este \u00e9 um exemplo de um sistema de logger baseado em bluetooth de Tasks cont\u00ednuas (ASF/FreeRTOS) ou Loop infinito (Arduino) que repassa o tr\u00e1fego de uma das portas seriais atrav\u00e9s de uma conex\u00e3o bluetooth I/O, atrav\u00e9s dos comandos AT para terminal I/O do modulo. Permite tamb\u00e9m o fluxo de dados entre os dispositivo. Um tunel de porta serial por bluetooth.","title":"Descri\u00e7\u00e3o"},{"location":"logger_bms42/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o da placa BlueEva+S integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino BlueEva+S 3.3V ext. PWR GND GND 9 X322/RESET 10 X324/UART-RXD 11 X323/UART-TXD As descri\u00e7\u00f5es dos pinos utilizados na placa BlueEva+S podem ser observadas documento: BlueEva+S/Central User Guide","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"logger_bms42/#configuracao-de-software","text":"Para a comunica\u00e7\u00e3o bluetooth neste exemplo \u00e9 necess\u00e1rio a utiliza\u00e7\u00e3o de um aplicativo de interface para comunica\u00e7\u00e3o e transmiss\u00e3o de dados com o BlueMod+S42.","title":"Configura\u00e7\u00e3o de Software"},{"location":"logger_bms42/#telit-terminal-io-utility-app","text":"A telit disponibiliza o aplicativo \"Terminal IO Utility\" para android e iOS o qual pode ser utilizado para estabelecer conex\u00f5es bluetooth de baixa energia entre um smartphone e o BlueEva+S Os seguintes QR-Codes proveem o link para download do \"Terminal IO Utility\". O \u201cTerminal IO Utility\u201d App permite o usuario se conectar ao terminal I/O dos dispositivos perifericos e trocar dados provendo uma simples emula\u00e7\u00e3o do terminal.","title":"Telit \"Terminal IO Utility\" App"},{"location":"logger_bms42_modem/","text":"Exemplo Logger Bluetooth Modem Arduino M0 Pro - BlueMode+S42 - XE910 - Logger ASF/FreeRTOS - BlueMode+S42 - XE910 - Logger Descri\u00e7\u00e3o Este \u00e9 um exemplo de um sistema de logger de bluetooth atrav\u00e9s de modem: o qual coloca o m\u00f3dulo Bluetooth para ouvir beacons e broadcasts / advertisement pr\u00f3ximos e os repassa diretamente para um socket aberto no modem. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o da placa BlueEva+S integrado com a EVK2 da Telit e com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino BlueEva+S Pino Arduino M0 Pro Pino EVK2 3.3V ext. PWR 9 RESET GND GND GND GND 3 X322/EXT-RES 10 C104/RXD 4 X324/UART-RXD 11 C103/TXD 5 X323/UART-TXD Nota: Devido a alimenta\u00e7\u00e3o externa da EVK2 se faz necessario a utiliza\u00e7\u00e3o de um capacitor de 10uF em paralelo a alimenta\u00e7\u00e3o do BlueEva+S para evitar interfer\u00eancias. Configura\u00e7\u00e3o de Software As configura\u00e7\u00f5es de operadora, protocolo, servidor(endere\u00e7o) e porta dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o das seguintes constantes no c\u00f3digo: GPRS_OI, GPRS_PROTOCOL, SERVER, PORT. #define GPRS_OI gprs.oi.com.br //Operadora do chip utilizado #define GPRS_PROTOCOL IP //Protocolo de internet #define SERVER exemplo.net //Endere\u00e7o do server a conectar #define PORT 9000 //Porta de comunica\u00e7\u00e3o do server Neste exemplo \u00e9 necess\u00e1rio a utiliza\u00e7\u00e3o de um aplicativo de interface para comunica\u00e7\u00e3o e transmiss\u00e3o de dados via Bluetooth com o BlueMod+S42. Para funcionamento correto \u00e9 necessario que o endere\u00e7o(ip) do servidor remoto esteja disponivel para acesso pela internet. Telit \"Terminal IO Utility\" App A telit disponibiliza o aplicativo \"Terminal IO Utility\" para android e iOS o qual pode ser utilizado para estabelecer conex\u00f5es bluetooth de baixa energia entre um smartphone e o BlueEva+S Os seguintes QR-Codes proveem o link para download do \"Terminal IO Utility\". O \u201cTerminal IO Utility\u201d App permite o usuario se conectar ao terminal I/O dos dispositivos perifericos e trocar dados provendo uma simples emula\u00e7\u00e3o do terminal. Packet Sender Para simula\u00e7\u00e3o do exemplo \u00e9 possivel a montagem do servidor uitilizando o software Packet Sender . Com o software instalado em um computador, execute o programa va em File Settings e configure conforme demonstrado abaixo. A porta tcp pode ser modificada, contanto que se utilize uma outra porta disponivel e configure corretamente no codigo do exemplo.","title":"Logger  BlueMod+S42 Modem"},{"location":"logger_bms42_modem/#exemplo-logger-bluetooth-modem","text":"Arduino M0 Pro - BlueMode+S42 - XE910 - Logger ASF/FreeRTOS - BlueMode+S42 - XE910 - Logger","title":"Exemplo Logger Bluetooth Modem"},{"location":"logger_bms42_modem/#descricao","text":"Este \u00e9 um exemplo de um sistema de logger de bluetooth atrav\u00e9s de modem: o qual coloca o m\u00f3dulo Bluetooth para ouvir beacons e broadcasts / advertisement pr\u00f3ximos e os repassa diretamente para um socket aberto no modem.","title":"Descri\u00e7\u00e3o"},{"location":"logger_bms42_modem/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o da placa BlueEva+S integrado com a EVK2 da Telit e com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino BlueEva+S Pino Arduino M0 Pro Pino EVK2 3.3V ext. PWR 9 RESET GND GND GND GND 3 X322/EXT-RES 10 C104/RXD 4 X324/UART-RXD 11 C103/TXD 5 X323/UART-TXD Nota: Devido a alimenta\u00e7\u00e3o externa da EVK2 se faz necessario a utiliza\u00e7\u00e3o de um capacitor de 10uF em paralelo a alimenta\u00e7\u00e3o do BlueEva+S para evitar interfer\u00eancias.","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"logger_bms42_modem/#configuracao-de-software","text":"As configura\u00e7\u00f5es de operadora, protocolo, servidor(endere\u00e7o) e porta dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o das seguintes constantes no c\u00f3digo: GPRS_OI, GPRS_PROTOCOL, SERVER, PORT. #define GPRS_OI gprs.oi.com.br //Operadora do chip utilizado #define GPRS_PROTOCOL IP //Protocolo de internet #define SERVER exemplo.net //Endere\u00e7o do server a conectar #define PORT 9000 //Porta de comunica\u00e7\u00e3o do server Neste exemplo \u00e9 necess\u00e1rio a utiliza\u00e7\u00e3o de um aplicativo de interface para comunica\u00e7\u00e3o e transmiss\u00e3o de dados via Bluetooth com o BlueMod+S42. Para funcionamento correto \u00e9 necessario que o endere\u00e7o(ip) do servidor remoto esteja disponivel para acesso pela internet.","title":"Configura\u00e7\u00e3o de Software"},{"location":"logger_bms42_modem/#telit-terminal-io-utility-app","text":"A telit disponibiliza o aplicativo \"Terminal IO Utility\" para android e iOS o qual pode ser utilizado para estabelecer conex\u00f5es bluetooth de baixa energia entre um smartphone e o BlueEva+S Os seguintes QR-Codes proveem o link para download do \"Terminal IO Utility\". O \u201cTerminal IO Utility\u201d App permite o usuario se conectar ao terminal I/O dos dispositivos perifericos e trocar dados provendo uma simples emula\u00e7\u00e3o do terminal.","title":"Telit \"Terminal IO Utility\" App"},{"location":"logger_bms42_modem/#packet-sender","text":"Para simula\u00e7\u00e3o do exemplo \u00e9 possivel a montagem do servidor uitilizando o software Packet Sender . Com o software instalado em um computador, execute o programa va em File Settings e configure conforme demonstrado abaixo. A porta tcp pode ser modificada, contanto que se utilize uma outra porta disponivel e configure corretamente no codigo do exemplo.","title":"Packet Sender"},{"location":"logger_bms42_wifi/","text":"Exemplo Logger Bluetooth Wifi Arduino M0 Pro - BlueMode+S42 - GS2101M - Logger ASF/FreeRTOS - BlueMode+S42 - GS2101M - Logger Descri\u00e7\u00e3o Este \u00e9 um exemplo de um sistema de logger de bluetooth baseado em wifi, que repassa o tr\u00e1fego de um dispositivo por porta serial bluetooth para um socket aberto em um servidor local. Permite tamb\u00e9m o fluxo de dados refletido na porta serial bluetooth . Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o da placa BlueEva+S integrado com a EVB3 da Telit e com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino BlueEva+S Pino Arduino M0 Pro Pino EVB3 Pino BlueEva+S Pino EVB3 3 X322/EXT-RES 3.3V VIN_3V3 ext. PWR VIN_3V3 4 X324/UART-RXD GND GND GND GND 5 X323/UART-TXD 09 EXT_RTC_RESET_N 10 GPIO0/UART0_RX_M 11 GPIO1/UART0_TX_M Configura\u00e7\u00e3o de Software As configura\u00e7\u00f5es de rede(SSID), senha, servidor(endere\u00e7o ip) e protocolo dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o das seguintes constantes no c\u00f3digo: SSID_WIFI, PWD_WIFI, SERVER, PORT. #define SSID_WIFI yourNetwork //Nome de sua rede (SSID) #define PWD_WIFI yourPassword //Senha de sua rede (WPA ou WEP key) #define SERVER 192.168.0.1 //Ip do server local a conectar #define PORT 9000 //Porta de comunica\u00e7\u00e3o do server Neste exemplo \u00e9 necess\u00e1rio a utiliza\u00e7\u00e3o de um aplicativo de interface para comunica\u00e7\u00e3o e transmiss\u00e3o de dados via Bluetooth com o BlueMod+S42. Para funcionamento correto \u00e9 necessario que o servidor esteja localizado na mesma rede. Telit \"Terminal IO Utility\" App A telit disponibiliza o aplicativo \"Terminal IO Utility\" para android e iOS o qual pode ser utilizado para estabelecer conex\u00f5es bluetooth de baixa energia entre um smartphone e o BlueEva+S Os seguintes QR-Codes proveem o link para download do \"Terminal IO Utility\". O \u201cTerminal IO Utility\u201d App permite o usuario se conectar ao terminal I/O dos dispositivos perifericos e trocar dados provendo uma simples emula\u00e7\u00e3o do terminal. Packet Sender Para simula\u00e7\u00e3o do exemplo \u00e9 possivel a montagem do servidor uitilizando o software Packet Sender . Com o software instalado em um computador, execute o programa va em File Settings e configure conforme demonstrado abaixo. A porta tcp pode ser modificada, contanto que se utilize uma outra porta disponivel e configure corretamente no codigo do exemplo.","title":"Logger  BlueMod+S42 Wifi"},{"location":"logger_bms42_wifi/#exemplo-logger-bluetooth-wifi","text":"Arduino M0 Pro - BlueMode+S42 - GS2101M - Logger ASF/FreeRTOS - BlueMode+S42 - GS2101M - Logger","title":"Exemplo Logger Bluetooth Wifi"},{"location":"logger_bms42_wifi/#descricao","text":"Este \u00e9 um exemplo de um sistema de logger de bluetooth baseado em wifi, que repassa o tr\u00e1fego de um dispositivo por porta serial bluetooth para um socket aberto em um servidor local. Permite tamb\u00e9m o fluxo de dados refletido na porta serial bluetooth .","title":"Descri\u00e7\u00e3o"},{"location":"logger_bms42_wifi/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o da placa BlueEva+S integrado com a EVB3 da Telit e com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino BlueEva+S Pino Arduino M0 Pro Pino EVB3 Pino BlueEva+S Pino EVB3 3 X322/EXT-RES 3.3V VIN_3V3 ext. PWR VIN_3V3 4 X324/UART-RXD GND GND GND GND 5 X323/UART-TXD 09 EXT_RTC_RESET_N 10 GPIO0/UART0_RX_M 11 GPIO1/UART0_TX_M","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"logger_bms42_wifi/#configuracao-de-software","text":"As configura\u00e7\u00f5es de rede(SSID), senha, servidor(endere\u00e7o ip) e protocolo dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o das seguintes constantes no c\u00f3digo: SSID_WIFI, PWD_WIFI, SERVER, PORT. #define SSID_WIFI yourNetwork //Nome de sua rede (SSID) #define PWD_WIFI yourPassword //Senha de sua rede (WPA ou WEP key) #define SERVER 192.168.0.1 //Ip do server local a conectar #define PORT 9000 //Porta de comunica\u00e7\u00e3o do server Neste exemplo \u00e9 necess\u00e1rio a utiliza\u00e7\u00e3o de um aplicativo de interface para comunica\u00e7\u00e3o e transmiss\u00e3o de dados via Bluetooth com o BlueMod+S42. Para funcionamento correto \u00e9 necessario que o servidor esteja localizado na mesma rede.","title":"Configura\u00e7\u00e3o de Software"},{"location":"logger_bms42_wifi/#telit-terminal-io-utility-app","text":"A telit disponibiliza o aplicativo \"Terminal IO Utility\" para android e iOS o qual pode ser utilizado para estabelecer conex\u00f5es bluetooth de baixa energia entre um smartphone e o BlueEva+S Os seguintes QR-Codes proveem o link para download do \"Terminal IO Utility\". O \u201cTerminal IO Utility\u201d App permite o usuario se conectar ao terminal I/O dos dispositivos perifericos e trocar dados provendo uma simples emula\u00e7\u00e3o do terminal.","title":"Telit \"Terminal IO Utility\" App"},{"location":"logger_bms42_wifi/#packet-sender","text":"Para simula\u00e7\u00e3o do exemplo \u00e9 possivel a montagem do servidor uitilizando o software Packet Sender . Com o software instalado em um computador, execute o programa va em File Settings e configure conforme demonstrado abaixo. A porta tcp pode ser modificada, contanto que se utilize uma outra porta disponivel e configure corretamente no codigo do exemplo.","title":"Packet Sender"},{"location":"logger_gs2101m_wifi/","text":"Exemplo Logger Bluetooth Modem Arduino M0 Pro - GS2101M - Logger ASF/FreeRTOS - GS2101M - Logger Descri\u00e7\u00e3o Este \u00e9 um exemplo de um sistema de logger de Tasks cont\u00ednuas (ASF/FreeRTOS) ou Loop infinito (Arduino) baseado em wifi que repassa o tr\u00e1fego de uma das portas seriais para um socket aberto com um servidor local e permite o fluxo de dados servidor- dispositivo, refletido na porta serial. Um tunel de porta serial por TCP. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o da placa BlueEva+S integrado com a EVB3 da Telit e com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVB3 GND GND 3.3V VIN_3V3 10 GPIO0/UART0_RX_M 11 GPIO1/UART0_TX_M 09 EXT_RTC_RESET_N Configura\u00e7\u00e3o de Software As configura\u00e7\u00f5es de rede(SSID), senha, servidor(endere\u00e7o ip) e protocolo dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o das seguintes constantes no c\u00f3digo: SSID_WIFI, PWD_WIFI, SERVER, PORT. #define SSID_WIFI yourNetwork //Nome de sua rede (SSID) #define PWD_WIFI yourPassword //Senha de sua rede (WPA ou WEP key) #define SERVER 192.168.0.1 //Ip do server local a conectar #define PORT 9000 //Porta de comunica\u00e7\u00e3o do server Para funcionamento correto \u00e9 necessario que o servidor esteja localizado na mesma rede. Packet Sender Para simula\u00e7\u00e3o do exemplo \u00e9 possivel a montagem do servidor uitilizando o software Packet Sender . Com o software instalado em um computador, execute o programa va em File Settings e configure conforme demonstrado abaixo. A porta tcp pode ser modificada, contanto que se utilize uma outra porta disponivel e configure corretamente no codigo do exemplo.","title":"Logger Wifi GS2101M"},{"location":"logger_gs2101m_wifi/#exemplo-logger-bluetooth-modem","text":"Arduino M0 Pro - GS2101M - Logger ASF/FreeRTOS - GS2101M - Logger","title":"Exemplo Logger Bluetooth Modem"},{"location":"logger_gs2101m_wifi/#descricao","text":"Este \u00e9 um exemplo de um sistema de logger de Tasks cont\u00ednuas (ASF/FreeRTOS) ou Loop infinito (Arduino) baseado em wifi que repassa o tr\u00e1fego de uma das portas seriais para um socket aberto com um servidor local e permite o fluxo de dados servidor- dispositivo, refletido na porta serial. Um tunel de porta serial por TCP.","title":"Descri\u00e7\u00e3o"},{"location":"logger_gs2101m_wifi/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o da placa BlueEva+S integrado com a EVB3 da Telit e com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVB3 GND GND 3.3V VIN_3V3 10 GPIO0/UART0_RX_M 11 GPIO1/UART0_TX_M 09 EXT_RTC_RESET_N","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"logger_gs2101m_wifi/#configuracao-de-software","text":"As configura\u00e7\u00f5es de rede(SSID), senha, servidor(endere\u00e7o ip) e protocolo dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o das seguintes constantes no c\u00f3digo: SSID_WIFI, PWD_WIFI, SERVER, PORT. #define SSID_WIFI yourNetwork //Nome de sua rede (SSID) #define PWD_WIFI yourPassword //Senha de sua rede (WPA ou WEP key) #define SERVER 192.168.0.1 //Ip do server local a conectar #define PORT 9000 //Porta de comunica\u00e7\u00e3o do server Para funcionamento correto \u00e9 necessario que o servidor esteja localizado na mesma rede.","title":"Configura\u00e7\u00e3o de Software"},{"location":"logger_gs2101m_wifi/#packet-sender","text":"Para simula\u00e7\u00e3o do exemplo \u00e9 possivel a montagem do servidor uitilizando o software Packet Sender . Com o software instalado em um computador, execute o programa va em File Settings e configure conforme demonstrado abaixo. A porta tcp pode ser modificada, contanto que se utilize uma outra porta disponivel e configure corretamente no codigo do exemplo.","title":"Packet Sender"},{"location":"modem_he910g_gps_geofence _sms/","text":"Exemplo GPS Geofence SMS Arduino M0 Pro - XE910 - GPS Geofence SMS ASF/FreeRTOS - XE910 - GPS Geofence SMS Descri\u00e7\u00e3o Esse exemplo mostra como criar um sistema de geofence com GPS associado a comunica\u00e7\u00e3o SMS: Atrav\u00e9s da solicita\u00e7\u00e3o por sms \"get fix\" o modulo envia uma resposta por sms com os dados resultantes do geofence. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide Configura\u00e7\u00e3o de Software As configura\u00e7\u00f5es do array de coordenadas do poligono dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo. #define CELL_NUMBER +83-n\u00famero do telefone- const uint8_t polySides = 4 ; // Quantidade de lados do poligono. // A, B, C, D float polyX [ polySides ] = { - 7.107206 , - 7.108143 , - 7.108930 , - 7.107962 }; // X float polyY [ polySides ] = { - 34.835296 , - 34.834491 , - 34.835607 , - 34.836444 }; // Y","title":"Geofence GPS SMS"},{"location":"modem_he910g_gps_geofence _sms/#exemplo-gps-geofence-sms","text":"Arduino M0 Pro - XE910 - GPS Geofence SMS ASF/FreeRTOS - XE910 - GPS Geofence SMS","title":"Exemplo GPS Geofence SMS"},{"location":"modem_he910g_gps_geofence _sms/#descricao","text":"Esse exemplo mostra como criar um sistema de geofence com GPS associado a comunica\u00e7\u00e3o SMS: Atrav\u00e9s da solicita\u00e7\u00e3o por sms \"get fix\" o modulo envia uma resposta por sms com os dados resultantes do geofence.","title":"Descri\u00e7\u00e3o"},{"location":"modem_he910g_gps_geofence _sms/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"modem_he910g_gps_geofence _sms/#configuracao-de-software","text":"As configura\u00e7\u00f5es do array de coordenadas do poligono dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo. #define CELL_NUMBER +83-n\u00famero do telefone- const uint8_t polySides = 4 ; // Quantidade de lados do poligono. // A, B, C, D float polyX [ polySides ] = { - 7.107206 , - 7.108143 , - 7.108930 , - 7.107962 }; // X float polyY [ polySides ] = { - 34.835296 , - 34.834491 , - 34.835607 , - 34.836444 }; // Y","title":"Configura\u00e7\u00e3o de Software"},{"location":"modem_he910g_gps_geofence/","text":"Exemplo GPS Geofence Arduino M0 Pro - XE910 - GPS Geofence ASF/FreeRTOS - XE910 - GPS Geofence Descri\u00e7\u00e3o Esse exemplo mostra como criar um sistema de geofence com GPS o qual determina o pertencimento de uma localiza\u00e7\u00e3o(latitude/longitude) recebida atrav\u00e9s dos c\u00f3digos NMEA emitidos automaticamente pelo m\u00f3dulo GPS, pela porta serial, ao interior de um poligono definido atrav\u00e9s de um array de coordenadas. Quando o fix(localiza\u00e7\u00e3o), est\u00e1 fora do pol\u00edgono, envia onda quadrada para um buzzer/falante e acende um LED. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide Configura\u00e7\u00e3o de Software As configura\u00e7\u00f5es do array de coordenadas do poligono dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo. const uint8_t polySides = 4 ; // Quantidade de lados do poligono. // A, B, C, D float polyX [ polySides ] = { - 7.107206 , - 7.108143 , - 7.108930 , - 7.107962 }; // X float polyY [ polySides ] = { - 34.835296 , - 34.834491 , - 34.835607 , - 34.836444 }; // Y","title":"Geofence GPS"},{"location":"modem_he910g_gps_geofence/#exemplo-gps-geofence","text":"Arduino M0 Pro - XE910 - GPS Geofence ASF/FreeRTOS - XE910 - GPS Geofence","title":"Exemplo GPS Geofence"},{"location":"modem_he910g_gps_geofence/#descricao","text":"Esse exemplo mostra como criar um sistema de geofence com GPS o qual determina o pertencimento de uma localiza\u00e7\u00e3o(latitude/longitude) recebida atrav\u00e9s dos c\u00f3digos NMEA emitidos automaticamente pelo m\u00f3dulo GPS, pela porta serial, ao interior de um poligono definido atrav\u00e9s de um array de coordenadas. Quando o fix(localiza\u00e7\u00e3o), est\u00e1 fora do pol\u00edgono, envia onda quadrada para um buzzer/falante e acende um LED.","title":"Descri\u00e7\u00e3o"},{"location":"modem_he910g_gps_geofence/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"modem_he910g_gps_geofence/#configuracao-de-software","text":"As configura\u00e7\u00f5es do array de coordenadas do poligono dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo. const uint8_t polySides = 4 ; // Quantidade de lados do poligono. // A, B, C, D float polyX [ polySides ] = { - 7.107206 , - 7.108143 , - 7.108930 , - 7.107962 }; // X float polyY [ polySides ] = { - 34.835296 , - 34.834491 , - 34.835607 , - 34.836444 }; // Y","title":"Configura\u00e7\u00e3o de Software"},{"location":"modem_he910g_lbs_geofence_sms/","text":"Exemplo LBS Geofence SMS Arduino M0 Pro - XE910 - LBS Geofence SMS Descri\u00e7\u00e3o Esse exemplo mostra como criar um sistema de geofence com LBS associado a comunica\u00e7\u00e3o SMS: Atrav\u00e9s da solicita\u00e7\u00e3o por sms \"get fix\" o modulo envia uma resposta por sms com os dados resultantes do geofence. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide Configura\u00e7\u00e3o de Software As configura\u00e7\u00f5es do array de coordenadas do poligono dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo. #define CELL_NUMBER +83-n\u00famero do telefone- const uint8_t polySides = 4 ; // Quantidade de lados do poligono. // A, B, C, D float polyX [ polySides ] = { - 7.107206 , - 7.108143 , - 7.108930 , - 7.107962 }; // X float polyY [ polySides ] = { - 34.835296 , - 34.834491 , - 34.835607 , - 34.836444 }; // Y","title":"Geofence LBS SMS"},{"location":"modem_he910g_lbs_geofence_sms/#exemplo-lbs-geofence-sms","text":"Arduino M0 Pro - XE910 - LBS Geofence SMS","title":"Exemplo LBS Geofence SMS"},{"location":"modem_he910g_lbs_geofence_sms/#descricao","text":"Esse exemplo mostra como criar um sistema de geofence com LBS associado a comunica\u00e7\u00e3o SMS: Atrav\u00e9s da solicita\u00e7\u00e3o por sms \"get fix\" o modulo envia uma resposta por sms com os dados resultantes do geofence.","title":"Descri\u00e7\u00e3o"},{"location":"modem_he910g_lbs_geofence_sms/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"modem_he910g_lbs_geofence_sms/#configuracao-de-software","text":"As configura\u00e7\u00f5es do array de coordenadas do poligono dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo. #define CELL_NUMBER +83-n\u00famero do telefone- const uint8_t polySides = 4 ; // Quantidade de lados do poligono. // A, B, C, D float polyX [ polySides ] = { - 7.107206 , - 7.108143 , - 7.108930 , - 7.107962 }; // X float polyY [ polySides ] = { - 34.835296 , - 34.834491 , - 34.835607 , - 34.836444 }; // Y","title":"Configura\u00e7\u00e3o de Software"},{"location":"modem_he910g_logger/","text":"Exemplo Logger Arduino M0 Pro - XE910 - Logger ASF/FreeRTOS - XE910 - Logger Descri\u00e7\u00e3o Este \u00e9 um exemplo de um sistema de logger baseado em modem de Tasks cont\u00ednuas (ASF/FreeRTOS) ou Loop infinito (Arduino) que repassa o tr\u00e1fego de uma das portas seriais para um socket aberto com um servidor remoto e bufferiza os bytes que s\u00e3o recebidos enquanto a conex\u00e3o n\u00e3o estava ativa. O sistema verifica que a conex\u00e3o caiu (contexto com a APN ou o socket) e tenta continuamente uma reconex\u00e3o. Permite tamb\u00e9m o fluxo de dados servidor- dispositivo, refletido na porta serial. Um tunel de porta serial por TCP. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide Configura\u00e7\u00e3o de Software As configura\u00e7\u00f5es de operadora, protocolo, servidor(endere\u00e7o) e porta dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o das seguintes constantes no c\u00f3digo: GPRS_OI, GPRS_PROTOCOL, SERVER, PORT. #define GPRS_OI gprs.oi.com.br //Operadora do chip utilizado #define GPRS_PROTOCOL IP //Protocolo de internet #define SERVER exemplo.net //Endere\u00e7o do server a conectar #define PORT 9000 //Porta de comunica\u00e7\u00e3o do server Para funcionamento correto \u00e9 necessario que o endere\u00e7o(ip) do servidor remoto esteja disponivel para acesso pela internet. Packet Sender Para simula\u00e7\u00e3o do exemplo \u00e9 possivel a montagem do servidor uitilizando o software Packet Sender . Com o software instalado em um computador, execute o programa va em File Settings e configure conforme demonstrado abaixo. A porta tcp pode ser modificada, contanto que se utilize uma outra porta disponivel e configure corretamente no codigo do exemplo.","title":"Logger Modem"},{"location":"modem_he910g_logger/#exemplo-logger","text":"Arduino M0 Pro - XE910 - Logger ASF/FreeRTOS - XE910 - Logger","title":"Exemplo Logger"},{"location":"modem_he910g_logger/#descricao","text":"Este \u00e9 um exemplo de um sistema de logger baseado em modem de Tasks cont\u00ednuas (ASF/FreeRTOS) ou Loop infinito (Arduino) que repassa o tr\u00e1fego de uma das portas seriais para um socket aberto com um servidor remoto e bufferiza os bytes que s\u00e3o recebidos enquanto a conex\u00e3o n\u00e3o estava ativa. O sistema verifica que a conex\u00e3o caiu (contexto com a APN ou o socket) e tenta continuamente uma reconex\u00e3o. Permite tamb\u00e9m o fluxo de dados servidor- dispositivo, refletido na porta serial. Um tunel de porta serial por TCP.","title":"Descri\u00e7\u00e3o"},{"location":"modem_he910g_logger/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"modem_he910g_logger/#configuracao-de-software","text":"As configura\u00e7\u00f5es de operadora, protocolo, servidor(endere\u00e7o) e porta dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o das seguintes constantes no c\u00f3digo: GPRS_OI, GPRS_PROTOCOL, SERVER, PORT. #define GPRS_OI gprs.oi.com.br //Operadora do chip utilizado #define GPRS_PROTOCOL IP //Protocolo de internet #define SERVER exemplo.net //Endere\u00e7o do server a conectar #define PORT 9000 //Porta de comunica\u00e7\u00e3o do server Para funcionamento correto \u00e9 necessario que o endere\u00e7o(ip) do servidor remoto esteja disponivel para acesso pela internet.","title":"Configura\u00e7\u00e3o de Software"},{"location":"modem_he910g_logger/#packet-sender","text":"Para simula\u00e7\u00e3o do exemplo \u00e9 possivel a montagem do servidor uitilizando o software Packet Sender . Com o software instalado em um computador, execute o programa va em File Settings e configure conforme demonstrado abaixo. A porta tcp pode ser modificada, contanto que se utilize uma outra porta disponivel e configure corretamente no codigo do exemplo.","title":"Packet Sender"},{"location":"modem_he910g_porteiro_eletronico/","text":"Exemplo Porteiro Eletr\u00f4nico Arduino M0 Pro - XE910 - Porteiro Eletr\u00f4nico ASF/FreeRTOS - XE910 - Porteiro Eletr\u00f4nico Descri\u00e7\u00e3o Esse exemplo mostra como criar um sistema que permite ao acionar um bot\u00e3o a realiza\u00e7\u00e3o de uma liga\u00e7\u00e3o para um numero predefinido. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide Configura\u00e7\u00e3o de Software A configura\u00e7\u00e3o do n\u00famero a ser realizado a liga\u00e7\u00e3o devera ser configurado manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo: #define PHONE_NUMBER +5583-n\u00famero do telefone-","title":"Porteiro Eletr\u00f4nico"},{"location":"modem_he910g_porteiro_eletronico/#exemplo-porteiro-eletronico","text":"Arduino M0 Pro - XE910 - Porteiro Eletr\u00f4nico ASF/FreeRTOS - XE910 - Porteiro Eletr\u00f4nico","title":"Exemplo Porteiro Eletr\u00f4nico"},{"location":"modem_he910g_porteiro_eletronico/#descricao","text":"Esse exemplo mostra como criar um sistema que permite ao acionar um bot\u00e3o a realiza\u00e7\u00e3o de uma liga\u00e7\u00e3o para um numero predefinido.","title":"Descri\u00e7\u00e3o"},{"location":"modem_he910g_porteiro_eletronico/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"modem_he910g_porteiro_eletronico/#configuracao-de-software","text":"A configura\u00e7\u00e3o do n\u00famero a ser realizado a liga\u00e7\u00e3o devera ser configurado manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo: #define PHONE_NUMBER +5583-n\u00famero do telefone-","title":"Configura\u00e7\u00e3o de Software"},{"location":"modem_he910g_sms_commands/","text":"Exemplo SMS Commands Arduino M0 Pro - XE910 - SmsCommands ASF/FreeRTOS - XE910 - SmsCommands Descri\u00e7\u00e3o Este exemplo mostra como executar comandos atrav\u00e9s de Comunica\u00e7\u00e3o por SMS: Tasks ou rotinas que leem continuamente as mensagens SMS recebidas pelo m\u00f3dulo, lendo seu conte\u00fado e executando comandos conforme o texto enviado pela mensagem e com resposta(feedback) por SMS. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide Configura\u00e7\u00e3o de Software A configura\u00e7\u00e3o do n\u00famero a ser enviado o feedback, devera ser configurado manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo: #define CELL_NUMBER +83-n\u00famero do telefone-","title":"SMS Commands"},{"location":"modem_he910g_sms_commands/#exemplo-sms-commands","text":"Arduino M0 Pro - XE910 - SmsCommands ASF/FreeRTOS - XE910 - SmsCommands","title":"Exemplo SMS Commands"},{"location":"modem_he910g_sms_commands/#descricao","text":"Este exemplo mostra como executar comandos atrav\u00e9s de Comunica\u00e7\u00e3o por SMS: Tasks ou rotinas que leem continuamente as mensagens SMS recebidas pelo m\u00f3dulo, lendo seu conte\u00fado e executando comandos conforme o texto enviado pela mensagem e com resposta(feedback) por SMS.","title":"Descri\u00e7\u00e3o"},{"location":"modem_he910g_sms_commands/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"modem_he910g_sms_commands/#configuracao-de-software","text":"A configura\u00e7\u00e3o do n\u00famero a ser enviado o feedback, devera ser configurado manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo: #define CELL_NUMBER +83-n\u00famero do telefone-","title":"Configura\u00e7\u00e3o de Software"},{"location":"modem_ue910gl_dtmf_commands/","text":"Exemplo DTMF Commands Arduino M0 Pro - XE910 - DTMF Commands Descri\u00e7\u00e3o Esse exemplo demonstra como criar um sistema com interface por chamadas telefonica(chamada de voz), exibindo um menu e apresentando respostas por audio e permitindo o envio de comandos por DTMF (pelo teclado numerico). Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide Configura\u00e7\u00e3o de Software Para o uso de audio pre-gravados pelo modem da telit para respostas, \u00e9 necessario que os arquivos de audio esteja armazenado na memoria do modulo no formato wav ou pcm. O carregamento do arquivo \u00e9 realizado atrav\u00e9s do aplicativo para windows TELIT AT CONTROLLER . Carregamento de Arquivos de A\u00fadio Atrav\u00e9s do terminal do Telit AT Controller, siga os seguintes passos para o carregamento do arquivo. Insira o comando abaixo: AT#ASEND=\"file.wav\",320000 Nota: O primeiro parametro \u00e9 o nome do arquivo a ser amazenado na memoria do modulo e deve ser escrito junto ao nome a extens\u00e3o do arquivo \"wav\". O segundo parametro \u00e9 o tamanho do arquivo a ser armazenado em bytes. Click com o bot\u00e3o direito no arquivo, va em \"Propiedades\" na caixa de dialogo do Windows e observe o tamanho exato do arquivo em bytes. Ap\u00f3s o comando aguarde a resposta do prompt \"CONNECT\" prompt, depois da resposta, pode-se enviar o arquivo de audio WAV usando a op\u00e7\u00e3o \"Send File\" do ferramente de terminal \"Telit AT Controller\" (use RAW ASCII protocol). Se a transfer\u00eancia do arquivo for completada com sucesso, o modulo retornara a messagem \"OK\". Se o arquivo WAV foi armazenado corretamente, o modulo retorna a messagem \"#ASENDEV: 0\". Mais comandos e respostas do modulo que possam ser uteis: AT#ALIST - Comando: lista os arquivos de audio armazenados no modulo. -- #ALIST: (filename),(filesize),(crc) - Parametros: (filename) - nome do arquivo. (filesize) - Tamanho em bytes. (crc) - Endere\u00e7o de memoria armazenado AT#APLAY=1,1,\"file.wav\" - Comando: executa o audio no link do canal de voz. -- OK - Notifica\u00e7\u00e3o que o comando foi bem suscedido. -- #APLAYEV: 0 - Notifica\u00e7\u00e3o que o audio chegou ao fim de sua execu\u00e7\u00e3o. AT#ADELF=\"file.wav\" - deleta o arquivo de audio selecionado, armazenado na memoria interna do modulo. -- OK Nota: Arquivos de audio editado podem possivelmente gerar ERRO no momento da execu\u00e7\u00e3o. Ex: (AT#APLAY=1,1,\"file.wav\") retorna \"ERRO\" e n\u00e3o executa o audio. Arquivos de audio Arquivos de audio utilizados no exemplo. 1-dtmf.wav 2-dtmf.wav menu-dtmf.wav","title":"DTMF Commands"},{"location":"modem_ue910gl_dtmf_commands/#exemplo-dtmf-commands","text":"Arduino M0 Pro - XE910 - DTMF Commands","title":"Exemplo DTMF Commands"},{"location":"modem_ue910gl_dtmf_commands/#descricao","text":"Esse exemplo demonstra como criar um sistema com interface por chamadas telefonica(chamada de voz), exibindo um menu e apresentando respostas por audio e permitindo o envio de comandos por DTMF (pelo teclado numerico).","title":"Descri\u00e7\u00e3o"},{"location":"modem_ue910gl_dtmf_commands/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"modem_ue910gl_dtmf_commands/#configuracao-de-software","text":"Para o uso de audio pre-gravados pelo modem da telit para respostas, \u00e9 necessario que os arquivos de audio esteja armazenado na memoria do modulo no formato wav ou pcm. O carregamento do arquivo \u00e9 realizado atrav\u00e9s do aplicativo para windows TELIT AT CONTROLLER .","title":"Configura\u00e7\u00e3o de Software"},{"location":"modem_ue910gl_dtmf_commands/#carregamento-de-arquivos-de-audio","text":"Atrav\u00e9s do terminal do Telit AT Controller, siga os seguintes passos para o carregamento do arquivo. Insira o comando abaixo: AT#ASEND=\"file.wav\",320000 Nota: O primeiro parametro \u00e9 o nome do arquivo a ser amazenado na memoria do modulo e deve ser escrito junto ao nome a extens\u00e3o do arquivo \"wav\". O segundo parametro \u00e9 o tamanho do arquivo a ser armazenado em bytes. Click com o bot\u00e3o direito no arquivo, va em \"Propiedades\" na caixa de dialogo do Windows e observe o tamanho exato do arquivo em bytes. Ap\u00f3s o comando aguarde a resposta do prompt \"CONNECT\" prompt, depois da resposta, pode-se enviar o arquivo de audio WAV usando a op\u00e7\u00e3o \"Send File\" do ferramente de terminal \"Telit AT Controller\" (use RAW ASCII protocol). Se a transfer\u00eancia do arquivo for completada com sucesso, o modulo retornara a messagem \"OK\". Se o arquivo WAV foi armazenado corretamente, o modulo retorna a messagem \"#ASENDEV: 0\". Mais comandos e respostas do modulo que possam ser uteis: AT#ALIST - Comando: lista os arquivos de audio armazenados no modulo. -- #ALIST: (filename),(filesize),(crc) - Parametros: (filename) - nome do arquivo. (filesize) - Tamanho em bytes. (crc) - Endere\u00e7o de memoria armazenado AT#APLAY=1,1,\"file.wav\" - Comando: executa o audio no link do canal de voz. -- OK - Notifica\u00e7\u00e3o que o comando foi bem suscedido. -- #APLAYEV: 0 - Notifica\u00e7\u00e3o que o audio chegou ao fim de sua execu\u00e7\u00e3o. AT#ADELF=\"file.wav\" - deleta o arquivo de audio selecionado, armazenado na memoria interna do modulo. -- OK Nota: Arquivos de audio editado podem possivelmente gerar ERRO no momento da execu\u00e7\u00e3o. Ex: (AT#APLAY=1,1,\"file.wav\") retorna \"ERRO\" e n\u00e3o executa o audio.","title":"Carregamento de Arquivos de A\u00fadio"},{"location":"modem_ue910gl_dtmf_commands/#arquivos-de-audio","text":"Arquivos de audio utilizados no exemplo. 1-dtmf.wav 2-dtmf.wav menu-dtmf.wav","title":"Arquivos de audio"},{"location":"modem_ue910gl_hardware_mqtt/","text":"Exemplo Sistema MQTT Arduino M0 Pro - XE910 - MQTT Hardware ASF/FreeRTOS - XE910 - MQTT Software Descri\u00e7\u00e3o Publica vari\u00e1veis em sistema MQTT, por comandos AT de MQTT ou AT de Socket para modem: Cria rotinas que leem uma fila de dados a serem enviados para o portal MQTT da Telit,em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item executa o post de vari\u00e1veis por MQTT embutido nos m\u00f3dulos. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide Configura\u00e7\u00e3o de Software As configura\u00e7\u00f5es de operadora, protocolo, servidor e afins dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo: #define GPRS_OI gprs.oi.com.br //Operadora do chip utilizado #define GPRS_PROTOCOL IP //Protocolo de internet #define ENDPOINT api-dev.devicewise.com:1883 #define APP_TOKEN pLh5olDkMVIIG8Pd","title":"MQTT Hardware"},{"location":"modem_ue910gl_hardware_mqtt/#exemplo-sistema-mqtt","text":"Arduino M0 Pro - XE910 - MQTT Hardware ASF/FreeRTOS - XE910 - MQTT Software","title":"Exemplo Sistema MQTT"},{"location":"modem_ue910gl_hardware_mqtt/#descricao","text":"Publica vari\u00e1veis em sistema MQTT, por comandos AT de MQTT ou AT de Socket para modem: Cria rotinas que leem uma fila de dados a serem enviados para o portal MQTT da Telit,em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item executa o post de vari\u00e1veis por MQTT embutido nos m\u00f3dulos.","title":"Descri\u00e7\u00e3o"},{"location":"modem_ue910gl_hardware_mqtt/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"modem_ue910gl_hardware_mqtt/#configuracao-de-software","text":"As configura\u00e7\u00f5es de operadora, protocolo, servidor e afins dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo: #define GPRS_OI gprs.oi.com.br //Operadora do chip utilizado #define GPRS_PROTOCOL IP //Protocolo de internet #define ENDPOINT api-dev.devicewise.com:1883 #define APP_TOKEN pLh5olDkMVIIG8Pd","title":"Configura\u00e7\u00e3o de Software"},{"location":"modem_ue910gl_hardware_mqtt_lbs/","text":"Exemplo Sistema MQTT com LBS Arduino M0 Pro - XE910 - MQTT Hardware LBS Descri\u00e7\u00e3o Este exemplo mostra como enviar por MQTT (nativo) a locali\u00e7\u00e3o obtida com tecnlogia LBS, para o portal da Telit. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide Configura\u00e7\u00e3o de Software As configura\u00e7\u00f5es de operadora, protocolo, servidor e afins dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo: #define GPRS_OI gprs.oi.com.br //Operadora do chip utilizado #define GPRS_PROTOCOL IP //Protocolo de internet #define ENDPOINT api-dev.devicewise.com:1883 #define APP_TOKEN pLh5olDkMVIIG8Pd","title":"MQTT Hardware LBS"},{"location":"modem_ue910gl_hardware_mqtt_lbs/#exemplo-sistema-mqtt-com-lbs","text":"Arduino M0 Pro - XE910 - MQTT Hardware LBS","title":"Exemplo Sistema MQTT com LBS"},{"location":"modem_ue910gl_hardware_mqtt_lbs/#descricao","text":"Este exemplo mostra como enviar por MQTT (nativo) a locali\u00e7\u00e3o obtida com tecnlogia LBS, para o portal da Telit.","title":"Descri\u00e7\u00e3o"},{"location":"modem_ue910gl_hardware_mqtt_lbs/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"modem_ue910gl_hardware_mqtt_lbs/#configuracao-de-software","text":"As configura\u00e7\u00f5es de operadora, protocolo, servidor e afins dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo: #define GPRS_OI gprs.oi.com.br //Operadora do chip utilizado #define GPRS_PROTOCOL IP //Protocolo de internet #define ENDPOINT api-dev.devicewise.com:1883 #define APP_TOKEN pLh5olDkMVIIG8Pd","title":"Configura\u00e7\u00e3o de Software"},{"location":"modem_ue910gl_lbs_geofence/","text":"Exemplo LBS Geofence Arduino M0 Pro - XE910 - LBS Geofence ASF/FreeRTOS - XE910 - LBS Geofence Descri\u00e7\u00e3o *Esse exemplo mostra como criar um sistema de geofence com LBS o pertencimento ao interior de um poligono definido por um array de cordenadas, uma localiza\u00e7\u00e3o (latitude/longitude) obtida por triangula\u00e7\u00e3o de ERBs (antenas da rede celular), e realiza uma an\u00e1lise do pol\u00edgono considerando a grande imprecis\u00e3o da posi\u00e7\u00e3o obtida. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide Configura\u00e7\u00e3o de Software As configura\u00e7\u00f5es do array de coordenadas do poligono dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo. const uint8_t polySides = 4 ; // Quantidade de lados do poligono. // A, B, C, D float polyX [ polySides ] = { - 7.107206 , - 7.108143 , - 7.108930 , - 7.107962 }; // X float polyY [ polySides ] = { - 34.835296 , - 34.834491 , - 34.835607 , - 34.836444 }; // Y","title":"Geofence LBS"},{"location":"modem_ue910gl_lbs_geofence/#exemplo-lbs-geofence","text":"Arduino M0 Pro - XE910 - LBS Geofence ASF/FreeRTOS - XE910 - LBS Geofence","title":"Exemplo LBS Geofence"},{"location":"modem_ue910gl_lbs_geofence/#descricao","text":"*Esse exemplo mostra como criar um sistema de geofence com LBS o pertencimento ao interior de um poligono definido por um array de cordenadas, uma localiza\u00e7\u00e3o (latitude/longitude) obtida por triangula\u00e7\u00e3o de ERBs (antenas da rede celular), e realiza uma an\u00e1lise do pol\u00edgono considerando a grande imprecis\u00e3o da posi\u00e7\u00e3o obtida.","title":"Descri\u00e7\u00e3o"},{"location":"modem_ue910gl_lbs_geofence/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o do kit EVK2 da Telit integrado com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"modem_ue910gl_lbs_geofence/#configuracao-de-software","text":"As configura\u00e7\u00f5es do array de coordenadas do poligono dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo. const uint8_t polySides = 4 ; // Quantidade de lados do poligono. // A, B, C, D float polyX [ polySides ] = { - 7.107206 , - 7.108143 , - 7.108930 , - 7.107962 }; // X float polyY [ polySides ] = { - 34.835296 , - 34.834491 , - 34.835607 , - 34.836444 }; // Y","title":"Configura\u00e7\u00e3o de Software"},{"location":"samd21/","text":"","title":"Samd21"},{"location":"wifi_gs2101m_native_mqtt/","text":"Exemplo Sistema MQTT Native ASF/FreeRTOS - GS2101M - MQTT Native Descri\u00e7\u00e3o Publica vari\u00e1veis em sistema MQTT, por comandos AT de MQTT para modem: Cria rotinas que leem uma fila de dados a serem enviados para o portal MQTT da Telit,em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item executa o post de vari\u00e1veis por MQTT embutido nos m\u00f3dulos. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o da placa BlueEva+S integrado com a EVB3 da Telit e com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVB3 GND GND 3.3V VIN_3V3 10 GPIO0/UART0_RX_M 11 GPIO1/UART0_TX_M 09 EXT_RTC_RESET_N Configura\u00e7\u00e3o de Software As configura\u00e7\u00f5es de rede(SSID), senha, servidor(endere\u00e7o ip) e protocolo dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo: #define WIFI_SSID yourNetwork //Nome de sua rede (SSID) #define WIFI_PASSWORD yourPassword //Senha de sua rede (WPA ou WEP key) #define MQTT_DEFAULT_ADDRESS 10.0.0.5 //Ip do server a conectar #define MQTT_DEFAULT_PORT 1883 //Porta de comunica\u00e7\u00e3o do server #define MQTT_DEFAULT_CLIENT_ID nativeMqtt","title":"MQTT Native Wifi"},{"location":"wifi_gs2101m_native_mqtt/#exemplo-sistema-mqtt-native","text":"ASF/FreeRTOS - GS2101M - MQTT Native","title":"Exemplo Sistema MQTT Native"},{"location":"wifi_gs2101m_native_mqtt/#descricao","text":"Publica vari\u00e1veis em sistema MQTT, por comandos AT de MQTT para modem: Cria rotinas que leem uma fila de dados a serem enviados para o portal MQTT da Telit,em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item executa o post de vari\u00e1veis por MQTT embutido nos m\u00f3dulos.","title":"Descri\u00e7\u00e3o"},{"location":"wifi_gs2101m_native_mqtt/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o da placa BlueEva+S integrado com a EVB3 da Telit e com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVB3 GND GND 3.3V VIN_3V3 10 GPIO0/UART0_RX_M 11 GPIO1/UART0_TX_M 09 EXT_RTC_RESET_N","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"wifi_gs2101m_native_mqtt/#configuracao-de-software","text":"As configura\u00e7\u00f5es de rede(SSID), senha, servidor(endere\u00e7o ip) e protocolo dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo: #define WIFI_SSID yourNetwork //Nome de sua rede (SSID) #define WIFI_PASSWORD yourPassword //Senha de sua rede (WPA ou WEP key) #define MQTT_DEFAULT_ADDRESS 10.0.0.5 //Ip do server a conectar #define MQTT_DEFAULT_PORT 1883 //Porta de comunica\u00e7\u00e3o do server #define MQTT_DEFAULT_CLIENT_ID nativeMqtt","title":"Configura\u00e7\u00e3o de Software"},{"location":"wifi_gs2101m_software_mqtt/","text":"Exemplo Sistema MQTT Software ASF/FreeRTOS - GS2101M - MQTT Software Descri\u00e7\u00e3o Publica vari\u00e1veis em sistema MQTT, por comandos AT de Socket para modem: Cria rotinas que leem uma fila de dados a serem enviados para o portal MQTT da Telit,em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item executa o post de vari\u00e1veis por MQTT embutido nos m\u00f3dulos. Configura\u00e7\u00f5es de Hardware Esse exemplo foi criado para utiliza\u00e7\u00e3o da placa BlueEva+S integrado com a EVB3 da Telit e com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVB3 GND GND 3.3V VIN_3V3 10 GPIO0/UART0_RX_M 11 GPIO1/UART0_TX_M 09 EXT_RTC_RESET_N Configura\u00e7\u00e3o de Software As configura\u00e7\u00f5es de rede(SSID), senha, servidor(endere\u00e7o ip) e protocolo dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo: #define MQTT_DEFAULT_ADDRESS 52.200.8.131 //TODO: N\u00e3o consegui testar DNS #define MQTT_DEFAULT_PORT 1883 #define MQTT_DEFAULT_CLIENT_ID gs2k_178db1 #define MQTT_DEFAULT_USR Default #define MQTT_DEFAULT_PWD pLh5olDkMVIIG8Pd","title":"MQTT Software Wifi"},{"location":"wifi_gs2101m_software_mqtt/#exemplo-sistema-mqtt-software","text":"ASF/FreeRTOS - GS2101M - MQTT Software","title":"Exemplo Sistema MQTT Software"},{"location":"wifi_gs2101m_software_mqtt/#descricao","text":"Publica vari\u00e1veis em sistema MQTT, por comandos AT de Socket para modem: Cria rotinas que leem uma fila de dados a serem enviados para o portal MQTT da Telit,em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item executa o post de vari\u00e1veis por MQTT embutido nos m\u00f3dulos.","title":"Descri\u00e7\u00e3o"},{"location":"wifi_gs2101m_software_mqtt/#configuracoes-de-hardware","text":"Esse exemplo foi criado para utiliza\u00e7\u00e3o da placa BlueEva+S integrado com a EVB3 da Telit e com o arduino M0 PRO. Para correto funcionamento a conex\u00e3o das placas devem ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVB3 GND GND 3.3V VIN_3V3 10 GPIO0/UART0_RX_M 11 GPIO1/UART0_TX_M 09 EXT_RTC_RESET_N","title":"Configura\u00e7\u00f5es de Hardware"},{"location":"wifi_gs2101m_software_mqtt/#configuracao-de-software","text":"As configura\u00e7\u00f5es de rede(SSID), senha, servidor(endere\u00e7o ip) e protocolo dever\u00e3o ser configurados manualmente atrav\u00e9s da altera\u00e7\u00e3o de constantes no c\u00f3digo: #define MQTT_DEFAULT_ADDRESS 52.200.8.131 //TODO: N\u00e3o consegui testar DNS #define MQTT_DEFAULT_PORT 1883 #define MQTT_DEFAULT_CLIENT_ID gs2k_178db1 #define MQTT_DEFAULT_USR Default #define MQTT_DEFAULT_PWD pLh5olDkMVIIG8Pd","title":"Configura\u00e7\u00e3o de Software"},{"location":"xe910_doc/","text":"Sobre o M\u00f3dulo HE910 O m\u00f3dulo HE910 faz parte da fam\u00edlia de m\u00f3dulos GSM da Telit xE910 destinados para aplica\u00e7\u00f5es automotivas e telem\u00e1ticas 3G e 2G. Disponibiliza recursos avan\u00e7ados como localiza\u00e7\u00e3o GPS, LBS, Conex\u00f5es Socket TCP/UDP, Protocolos HTTP, MQTT e outros. Refer\u00eancias P\u00e1gina do Produto Datasheet Comandos AT Guia do Usu\u00e1rio Interface Card Datasheet Telit IP Easy User Guide Telit HE910 A-GPS Application Note Telit HE910 DTMF Sobre o Kit de Desenvolvimento EVK2 Refer\u00eancias EVK2 User Guide CS1467C Drivers Embarcados Configura\u00e7\u00e3o do Ambiente de Hardware O ambiente de hardware utilizado para os exemplos consiste na integra\u00e7\u00e3o da placa Arduino M0 Pro com o Kit de Desenvolvimento EVK2. Os procedimentos de setup inicial ser\u00e3o listados a seguir: 1 - Baixar e instalar os drives USB's do link: Drivers . Devem ser instalados os drivers destacados em azul, conforme indicado na imagem abaixo. 2 - Conectar a placa CS1467C atrav\u00e9s de seu conector miniUSB na porta USB do computador, conectar a fonte de alimenta\u00e7\u00e3o na placa base (EVK2) e pressionar o bot\u00e3o de on por 5s, como indicado na imagem abaixo. 3 - Para testar a comunica\u00e7\u00e3o com o m\u00f3dulo atrav\u00e9s de comandos AT, deve-se instalar o software serial Telit AT Controller, dispon\u00edvel no mesmo link usado anteriormente pra baixer os drivers: Drivers . Tela inicial do Telit AT Controller: Para iniciar os testes com o m\u00f3dulo \u00e9 preciso definir as configura\u00e7\u00f5es de conex\u00e3o: Configurada a conex\u00e3o, basta clicar ent\u00e3o no bot\u00e3o de \"Connect\", que \u00e9 o bot\u00e3o da esquerda no meio da tela. Dando tudo certo e com o m\u00f3dulo conectado, s\u00e3o exibidas uma s\u00e9rie de informa\u00e7\u00f5es tais como IMEI, Fabricante, Modelo e vers\u00e3o de Firmware no centro da tela do programa, indicando que o mesmo est\u00e1 comunicando e recebendo dados do m\u00f3dulo. Veja o resultado a conex\u00e3o com sucesso na figura abaixo. Integra\u00e7\u00e3o com Arduino M0 Pro A Conex\u00e3o da EVK2 com o arduino deve ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide","title":"Modem XE910"},{"location":"xe910_doc/#sobre-o-modulo-he910","text":"O m\u00f3dulo HE910 faz parte da fam\u00edlia de m\u00f3dulos GSM da Telit xE910 destinados para aplica\u00e7\u00f5es automotivas e telem\u00e1ticas 3G e 2G. Disponibiliza recursos avan\u00e7ados como localiza\u00e7\u00e3o GPS, LBS, Conex\u00f5es Socket TCP/UDP, Protocolos HTTP, MQTT e outros.","title":"Sobre o M\u00f3dulo HE910"},{"location":"xe910_doc/#referencias","text":"P\u00e1gina do Produto Datasheet Comandos AT Guia do Usu\u00e1rio Interface Card Datasheet Telit IP Easy User Guide Telit HE910 A-GPS Application Note Telit HE910 DTMF","title":"Refer\u00eancias"},{"location":"xe910_doc/#sobre-o-kit-de-desenvolvimento-evk2","text":"","title":"Sobre o Kit de Desenvolvimento EVK2"},{"location":"xe910_doc/#referencias_1","text":"EVK2 User Guide CS1467C Drivers Embarcados","title":"Refer\u00eancias"},{"location":"xe910_doc/#configuracao-do-ambiente-de-hardware","text":"O ambiente de hardware utilizado para os exemplos consiste na integra\u00e7\u00e3o da placa Arduino M0 Pro com o Kit de Desenvolvimento EVK2. Os procedimentos de setup inicial ser\u00e3o listados a seguir: 1 - Baixar e instalar os drives USB's do link: Drivers . Devem ser instalados os drivers destacados em azul, conforme indicado na imagem abaixo. 2 - Conectar a placa CS1467C atrav\u00e9s de seu conector miniUSB na porta USB do computador, conectar a fonte de alimenta\u00e7\u00e3o na placa base (EVK2) e pressionar o bot\u00e3o de on por 5s, como indicado na imagem abaixo. 3 - Para testar a comunica\u00e7\u00e3o com o m\u00f3dulo atrav\u00e9s de comandos AT, deve-se instalar o software serial Telit AT Controller, dispon\u00edvel no mesmo link usado anteriormente pra baixer os drivers: Drivers . Tela inicial do Telit AT Controller: Para iniciar os testes com o m\u00f3dulo \u00e9 preciso definir as configura\u00e7\u00f5es de conex\u00e3o: Configurada a conex\u00e3o, basta clicar ent\u00e3o no bot\u00e3o de \"Connect\", que \u00e9 o bot\u00e3o da esquerda no meio da tela. Dando tudo certo e com o m\u00f3dulo conectado, s\u00e3o exibidas uma s\u00e9rie de informa\u00e7\u00f5es tais como IMEI, Fabricante, Modelo e vers\u00e3o de Firmware no centro da tela do programa, indicando que o mesmo est\u00e1 comunicando e recebendo dados do m\u00f3dulo. Veja o resultado a conex\u00e3o com sucesso na figura abaixo.","title":"Configura\u00e7\u00e3o do Ambiente de Hardware"},{"location":"xe910_doc/#integracao-com-arduino-m0-pro","text":"A Conex\u00e3o da EVK2 com o arduino deve ser de acordo com a seguinte pinagem: Pino Arduino M0 Pro Pino EVK2 GND GND 10 C104/RXD 11 C103/TXD 09 RESET As descri\u00e7\u00f5es dos pinos utilizados na placa EVK2 podem ser observadas documento: EVK2 User Guide","title":"Integra\u00e7\u00e3o com Arduino M0 Pro"},{"location":"xe910_examples/","text":"Exemplos GSM HE910 T\u00fanel TCP Sistema de logger baseado em modem: Tasks cont\u00ednuas (ASF/FreeRTOS) ou Loop infinito (Arduino) que repassa o tr\u00e1fego de uma das portas seriais para um socket aberto com um servidor remoto, atrav\u00e9s dos comandos AT para sockets. Bufferiza os bytes que s\u00e3o recebidos enquanto a conex\u00e3o n\u00e3o estava ativa. As configura\u00e7\u00f5es de servidor, baudrate e afins s\u00e3o manuais, atrav\u00e9s de constantes no c\u00f3digo. O sistema verifica que a conex\u00e3o caiu (contexto com a APN ou o socket) e tenta continuamente uma reconex\u00e3o. Permite tamb\u00e9m o fluxo de dados servidor- dispositivo, refletido na porta serial. Um tunel de porta serial por TCP. Arduino - HE910 - T\u00fanel TCP ASF/FreeRTOS - HE910 - T\u00fanel TCP Geofence GPS Determina o pertencimento de uma latitude/longitude recebida atrav\u00e9s dos c\u00f3digos NMEA emitidos automaticamente pelo m\u00f3dulo GPS, pela porta serial, com o interior pol\u00edgono definido atrav\u00e9s de um array de coordenadas. Quando o fix, representado pela mensagem $GPGGA, est\u00e1 fora do pol\u00edgono, envia onda quadrada para um buzzer/falante e acende um LED. Arduino - HE910 - Geofence GPS ASF/FreeRTOS - HE910 - Geofence GPS Geofence LBS Utiliza os comandos AT#MONI e AT#AGPSSND para obter a posi\u00e7\u00e3o por triangula\u00e7\u00e3o as ERBs (antenas da rede celular), com an\u00e1lise de pol\u00edgono considerando a grande imprecis\u00e3o da posi\u00e7\u00e3o obtida. Os comandos s\u00e3o simples, utilizam: AT#MONI=7 (Aguarda), AT#MONI, AT#AGPSSND (recebe lat/long). Devido a imprecis\u00e3o, o status de dentro e fora do pol\u00edgono pode ser gradual, ao inv\u00e9s de bin\u00e1rio / tudo ou nada. Arduino - HE910 - Geofence LBS ASF/FreeRTOS - HE910 - Geofence LBS MQTT Nativo Publica vari\u00e1veis em sistema MQTT, comandos AT de MQTT (m\u00e9todo nativo) para modem: Cria task (FreeRTOS) ou rotina (Arduino) que l\u00ea uma fila de dados a serem enviados para o portal MQTT da Telit, em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item executa os comandos AT de post de vari\u00e1veis por MQTT embutido nos m\u00f3dulos. Arduino - HE910 - MQTT Nativo ASF/FreeRTOS - HE910 - MQTT Nativo MQTT Software Publica vari\u00e1vel em sistema MQTT, comandos AT de Socket (m\u00e9todo por software) para modem: Criar task (FreeRTOS) ou rotina (Arduino) que l\u00ea uma fila de dados a serem enviados para o portal MQTT da Telit, em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item efetua chamadas a uma biblioteca para o protocolo MQTT, se conectando ao servidor atrav\u00e9s dos comandos AT de socket do m\u00f3dulo. Esta implementa\u00e7\u00e3o utiliza a biblioteca Paho - Embedded MQTT C/C++ Client Libraries . Arduino - HE910 - MQTT Software ASF/FreeRTOS - HE910 - MQTT Software Geofence MQTT Associa\u00e7\u00e3o do sistema de geofence com publica\u00e7\u00e3o de posi\u00e7\u00f5es lidas a partir do GPS/LBS em um servidor MQTT. Arduino - HE910 - Geofence MQTT ASF/FreeRTOS - HE910 - Geofence MQTT Comandos SMS Comunica\u00e7\u00e3o por SMS: task ou rotina que l\u00ea continuamente as mensagens SMS recebidas pelo m\u00f3dulo, lendo seu conte\u00fado e executando comandos conforme o texto enviado pela mensagem, com resposta por SMS. Arduino - HE910 - Comandos SMS ASF/FreeRTOS - HE910 - Comandos SMS Geofence SMS Associa\u00e7\u00e3o entre o sistema de geofence com envio de posi\u00e7\u00f5es lidas a partir do GPS/LBS atrav\u00e9s do sistema de comunica\u00e7\u00e3o por SMS. Arduino - HE910 - Geofence SMS ASF/FreeRTOS - HE910 - Geofence SMS Menu de Voz DTMF Sistema de atendimento de liga\u00e7\u00f5es com recebimento de comandos por DTMF e resposta/menu atrav\u00e9s de sons pr\u00e9-gravados. Os comandos de detec\u00e7\u00e3o de DTMF possuem utiliza\u00e7\u00e3o simples e para tocar os sons basta chamar AT#APLAY=1,\"diretorio\",\"nome_do_arquivo\". Ou AT#SAMR. Implementa menus de exemplo e em alguns deles o modem envia mensagens de SMS conforme o c\u00f3digo digitado e envia vari\u00e1veis para o servidor MQTT conforme o c\u00f3digo digitado. Arduino - HE910 - Menu de Voz DTMF ASF/FreeRTOS - HE910 - Menu de Voz DTMF Porteiro Eletr\u00f4nico Sistema porteiro eletr\u00f4nico: se um bot\u00e3o for pressionado, liga para um telefone predefinido. Arduino - HE910 - Porteiro Eletr\u00f4nico ASF/FreeRTOS - HE910 - Porteiro Eletr\u00f4nico","title":"Exemplos GSM HE910"},{"location":"xe910_examples/#exemplos-gsm-he910","text":"","title":"Exemplos GSM HE910"},{"location":"xe910_examples/#tunel-tcp","text":"Sistema de logger baseado em modem: Tasks cont\u00ednuas (ASF/FreeRTOS) ou Loop infinito (Arduino) que repassa o tr\u00e1fego de uma das portas seriais para um socket aberto com um servidor remoto, atrav\u00e9s dos comandos AT para sockets. Bufferiza os bytes que s\u00e3o recebidos enquanto a conex\u00e3o n\u00e3o estava ativa. As configura\u00e7\u00f5es de servidor, baudrate e afins s\u00e3o manuais, atrav\u00e9s de constantes no c\u00f3digo. O sistema verifica que a conex\u00e3o caiu (contexto com a APN ou o socket) e tenta continuamente uma reconex\u00e3o. Permite tamb\u00e9m o fluxo de dados servidor- dispositivo, refletido na porta serial. Um tunel de porta serial por TCP. Arduino - HE910 - T\u00fanel TCP ASF/FreeRTOS - HE910 - T\u00fanel TCP","title":"T\u00fanel TCP"},{"location":"xe910_examples/#geofence-gps","text":"Determina o pertencimento de uma latitude/longitude recebida atrav\u00e9s dos c\u00f3digos NMEA emitidos automaticamente pelo m\u00f3dulo GPS, pela porta serial, com o interior pol\u00edgono definido atrav\u00e9s de um array de coordenadas. Quando o fix, representado pela mensagem $GPGGA, est\u00e1 fora do pol\u00edgono, envia onda quadrada para um buzzer/falante e acende um LED. Arduino - HE910 - Geofence GPS ASF/FreeRTOS - HE910 - Geofence GPS","title":"Geofence GPS"},{"location":"xe910_examples/#geofence-lbs","text":"Utiliza os comandos AT#MONI e AT#AGPSSND para obter a posi\u00e7\u00e3o por triangula\u00e7\u00e3o as ERBs (antenas da rede celular), com an\u00e1lise de pol\u00edgono considerando a grande imprecis\u00e3o da posi\u00e7\u00e3o obtida. Os comandos s\u00e3o simples, utilizam: AT#MONI=7 (Aguarda), AT#MONI, AT#AGPSSND (recebe lat/long). Devido a imprecis\u00e3o, o status de dentro e fora do pol\u00edgono pode ser gradual, ao inv\u00e9s de bin\u00e1rio / tudo ou nada. Arduino - HE910 - Geofence LBS ASF/FreeRTOS - HE910 - Geofence LBS","title":"Geofence LBS"},{"location":"xe910_examples/#mqtt-nativo","text":"Publica vari\u00e1veis em sistema MQTT, comandos AT de MQTT (m\u00e9todo nativo) para modem: Cria task (FreeRTOS) ou rotina (Arduino) que l\u00ea uma fila de dados a serem enviados para o portal MQTT da Telit, em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item executa os comandos AT de post de vari\u00e1veis por MQTT embutido nos m\u00f3dulos. Arduino - HE910 - MQTT Nativo ASF/FreeRTOS - HE910 - MQTT Nativo","title":"MQTT Nativo"},{"location":"xe910_examples/#mqtt-software","text":"Publica vari\u00e1vel em sistema MQTT, comandos AT de Socket (m\u00e9todo por software) para modem: Criar task (FreeRTOS) ou rotina (Arduino) que l\u00ea uma fila de dados a serem enviados para o portal MQTT da Telit, em pares \"nome da da vari\u00e1vel\" e \"valor\", e para cada item efetua chamadas a uma biblioteca para o protocolo MQTT, se conectando ao servidor atrav\u00e9s dos comandos AT de socket do m\u00f3dulo. Esta implementa\u00e7\u00e3o utiliza a biblioteca Paho - Embedded MQTT C/C++ Client Libraries . Arduino - HE910 - MQTT Software ASF/FreeRTOS - HE910 - MQTT Software","title":"MQTT Software"},{"location":"xe910_examples/#geofence-mqtt","text":"Associa\u00e7\u00e3o do sistema de geofence com publica\u00e7\u00e3o de posi\u00e7\u00f5es lidas a partir do GPS/LBS em um servidor MQTT. Arduino - HE910 - Geofence MQTT ASF/FreeRTOS - HE910 - Geofence MQTT","title":"Geofence MQTT"},{"location":"xe910_examples/#comandos-sms","text":"Comunica\u00e7\u00e3o por SMS: task ou rotina que l\u00ea continuamente as mensagens SMS recebidas pelo m\u00f3dulo, lendo seu conte\u00fado e executando comandos conforme o texto enviado pela mensagem, com resposta por SMS. Arduino - HE910 - Comandos SMS ASF/FreeRTOS - HE910 - Comandos SMS","title":"Comandos SMS"},{"location":"xe910_examples/#geofence-sms","text":"Associa\u00e7\u00e3o entre o sistema de geofence com envio de posi\u00e7\u00f5es lidas a partir do GPS/LBS atrav\u00e9s do sistema de comunica\u00e7\u00e3o por SMS. Arduino - HE910 - Geofence SMS ASF/FreeRTOS - HE910 - Geofence SMS","title":"Geofence SMS"},{"location":"xe910_examples/#menu-de-voz-dtmf","text":"Sistema de atendimento de liga\u00e7\u00f5es com recebimento de comandos por DTMF e resposta/menu atrav\u00e9s de sons pr\u00e9-gravados. Os comandos de detec\u00e7\u00e3o de DTMF possuem utiliza\u00e7\u00e3o simples e para tocar os sons basta chamar AT#APLAY=1,\"diretorio\",\"nome_do_arquivo\". Ou AT#SAMR. Implementa menus de exemplo e em alguns deles o modem envia mensagens de SMS conforme o c\u00f3digo digitado e envia vari\u00e1veis para o servidor MQTT conforme o c\u00f3digo digitado. Arduino - HE910 - Menu de Voz DTMF ASF/FreeRTOS - HE910 - Menu de Voz DTMF","title":"Menu de Voz DTMF"},{"location":"xe910_examples/#porteiro-eletronico","text":"Sistema porteiro eletr\u00f4nico: se um bot\u00e3o for pressionado, liga para um telefone predefinido. Arduino - HE910 - Porteiro Eletr\u00f4nico ASF/FreeRTOS - HE910 - Porteiro Eletr\u00f4nico","title":"Porteiro Eletr\u00f4nico"},{"location":"xe910_lib/","text":"","title":"Xe910 lib"}]}